#############################################################
# Rename the file extension to ".yaml" (remove "_") to enable
#############################################################

name: ------- Building Pull Requests (ufs-srweather-app) -------

on:
  # run it on push to the default repository branch
  push:
    branches:
      - develop
  # run it during pull request
  pull_request:
    branches:
      - develop    
    types: 
      - ready_for_review
      - review_requested

jobs:
  build:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    defaults:
      run:
        shell: bash
    
    container:
      image: docker://clouden90/ubuntu20.04-gnu9.3-hpc-stack:ruby
      
    name: Build ufs-srweather-app and test workflow in the container
    steps:
      - uses: actions/checkout@v2
      - uses: jitterbit/get-changed-files@v1
        id: abc
        with:
          format: space-delimited
          token: ${{ secrets.GITHUB_TOKEN }}        
  
      - name: Running cmake/make ufs-srweather-app
        run: |
          echo ${{ steps.abc.outputs.all }}
          echo "brach name is: ${{ github.head_ref }}"
          #ls /opt
          #cd /opt
          cd /home/jedi
          su jedi
          cd /home/jedi
          ls /home/jedi
          whoami
          pwd
          #ln -s /usr/bin/python3 /usr/bin/python
          git clone -b ${{ github.head_ref }} https://github.com/clouden90/ufs-srweather-app
          cd ufs-srweather-app
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          bashcov script.sh
          ./codecov -f coverage/codecov-result.json -Z

          #cd /opt/ufs-srweather-app
          #sed -i '8s/required = True/required = False/' Externals.cfg
          #sed -i '17s/required = True/required = False/' Externals.cfg
          #sed -i '35s/required = True/required = False/' Externals.cfg 
          #./manage_externals/checkout_externals

          # build process
          mkdir /home/jedi/ufs-srweather-app/build
          cd /home/jedi/ufs-srweather-app/build
          source /usr/share/lmod/6.6/init/profile
          module use /opt/hpc-modules/modulefiles/stack
          module load hpc hpc-gnu hpc-openmpi
          module load netcdf hdf5 bacio sfcio sigio nemsio w3emc esmf fms crtm g2 png zlib g2tmpl ip sp w3nco cmake/3.21.1 gfsio wgrib2 upp
          #cmake -DBUILD_UFS_UTILS=OFF -DBUILD_UPP=OFF -DCCPP_SUITES="FV3_GFS_v15p2" -DCMAKE_INSTALL_PREFIX=.. ..
          #make -j2

          #source /usr/share/lmod/6.6/init/profile 
          #export MACHINE="singularity"
          #export TOP_DIR=/opt/ufs-srweather-app
          #export SRC_DIR=/opt/ufs-srweather-app
          #export compiler="gnu"
          #export ENV_DIR=${TOP_DIR}/env
          #export BUILD_DIR=${TOP_DIR}/build_${compiler}
          #export BIN_DIR=${TOP_DIR}/bin_${compiler}
          #export EXEC_DIR=${BIN_DIR}/bin
          #cd /opt/ufs-srweather-app
          #sed -i 's/MACHINE="${MACHINE_ID}"/MACHINE="singularity"/g' ${ENV_DIR}/detect_machine.sh
          #./devbuild.sh --compiler=${compiler} --build-dir=${BUILD_DIR} --install-dir=${BIN_DIR} --ccpp="FV3_GFS_v15p2"

          #      - name: Download data for fcst test
          #        run: |
          #          echo "Now we are going to download data!"
          #          cd /opt
          #          wget https://dl.dropboxusercontent.com/s/76ec5q3dtlt0twl/exp.tar.gz 
          #          tar -xzvf exp.tar.gz
          #          ls /opt

          #      - name: run ctests 
          #        run: |
          #          echo "run ctests!"
          #          cd /opt/ufs-srweather-app/build
          #          source /opt/ufs-srweather-app/env/build_singularity_gnu.env
          #          ctest -R test_fcst 
