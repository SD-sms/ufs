{#

This is a Jinja-enabled Rocoto XML template. It is filled in using the
fill_template.py script, and is done automatically by the
generate_workflow.sh step of preparing a regional workflow configured
experiment.

See README.xml_templating.md for information on using the Templating mechanisms.
-#}
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE workflow [

<!--
Parameters needed by the job scheduler.
-->
<!ENTITY ACCOUNT            "{{ account }}">
<!ENTITY SERVICE_ACCOUNT    "{{ service_account }}">
<!ENTITY SCHED              "{{ sched }}">
<!ENTITY QUEUE_DEFAULT      "{{ queue_default }}">
<!ENTITY QUEUE_HPSS         "{{ queue_hpss }}">
<!ENTITY QUEUE_FCST         "{{ queue_fcst }}">
<!ENTITY QUEUE_POST         "{{ queue_post }}">
<!ENTITY QUEUE_PRDGEN       "{{ queue_prdgen }}">
<!ENTITY QUEUE_ANALYSIS     "{{ queue_analysis }}">
<!ENTITY QUEUE_GRAPHICS     "{{ queue_graphics }}">
<!ENTITY RRFS_RESERVE       {% if reservation %}"--reservation={{ reservation }}"{% else %}""{% endif %}>
<!ENTITY RRFS_POST_RESERVE  {% if reservation_post %}"--reservation={{ reservation_post }}"{% else %}""{% endif %}>

<!--
Workflow task names.
-->
{%- if sched_native_cmd  %}
<!ENTITY SCHED_NATIVE_CMD          "{{ sched_native_cmd }}">
{%- else %}
<!ENTITY SCHED_NATIVE_CMD          "">
{%- endif %}

<!ENTITY TN_MAKE_GRID              "{{ tn_make_grid }}">
<!ENTITY TN_MAKE_OROG              "{{ tn_make_orog }}">
<!ENTITY TN_MAKE_SFC_CLIMO         "{{ tn_make_sfc_climo }}">
<!ENTITY TN_GET_EXTRN_ICS          "{{ tn_get_extrn_ics }}">
<!ENTITY TN_GET_EXTRN_LBCS         "{{ tn_get_extrn_lbcs }}">
<!ENTITY TN_GET_EXTRN_LBCS_LONG    "{{ tn_get_extrn_lbcs_long }}">
<!ENTITY TN_MAKE_ICS               "{{ tn_make_ics }}">
<!ENTITY TN_MAKE_LBCS              "{{ tn_make_lbcs }}">
<!ENTITY TN_RUN_FCST               "{{ tn_run_fcst }}">
<!ENTITY TN_RUN_POST               "{{ tn_run_post }}">
{%- if fcst_len_hrs == -1 %}
<!ENTITY TN_RUN_POST_CYC1          "{{ tn_run_post }}_c1">
<!ENTITY TN_RUN_POST_CYC2          "{{ tn_run_post }}_c2">
<!ENTITY TN_RUN_POST_CYC3          "{{ tn_run_post }}_c3">
<!ENTITY TN_RUN_POST_CYC4          "{{ tn_run_post }}_c4">
{%- endif%}
<!ENTITY TN_RUN_PRDGEN             "{{ tn_run_prdgen }}">
<!ENTITY TN_RUN_BUFRSND            "{{ tn_run_bufrsnd }}">
<!ENTITY TN_ANAL_GSI               "{{ tn_anal_gsi }}">
<!ENTITY TN_POSTANAL               "{{ tn_postanal }}">
<!ENTITY TN_OBSERVER_GSI_ENSMEAN   "{{ tn_observer_gsi_ensmean }}">
<!ENTITY TN_OBSERVER_GSI           "{{ tn_observer_gsi }}">
<!ENTITY TN_PREP_CYC_SPINUP        "{{ tn_prep_cyc_spinup }}">
<!ENTITY TN_PREP_CYC_PROD          "{{ tn_prep_cyc_prod }}">
<!ENTITY TN_PREP_CYC               "{{ tn_prep_cyc }}">
<!ENTITY TN_CALC_ENSMEAN           "{{ tn_calc_ensmean }}">

<!ENTITY TN_PROCESS_RADAR_REF      "{{ tn_process_radar_ref }}">
<!ENTITY TN_PROCESS_LIGHTNING      "{{ tn_process_lightning }}">
<!ENTITY TN_PROCESS_BUFR           "{{ tn_process_bufr }}">
<!ENTITY TN_RADAR_REFL2TTEN        "{{ tn_radar_refl2tten }}">
<!ENTITY TN_CLDANL_NONVAR          "{{ tn_cldanl_nonvar }}">
<!ENTITY TN_SAVE_RESTART           "{{ tn_save_restart }}">
<!ENTITY TN_SAVE_INPUT             "{{ tn_save_input }}">
<!ENTITY TN_JEDI_ENVAR_IODA        "{{ tn_jedi_envar_ioda }}">
<!ENTITY TN_PROCESS_SMOKE          "{{ tn_process_smoke }}">
<!ENTITY TN_RUN_CLEAN              "{{ tn_run_clean }}">
<!ENTITY TN_RUN_ARCHIVE            "{{ tn_run_archive }}">

<!ENTITY TN_RUN_PREPSTART          "run_prepstart">
<!ENTITY TN_RUN_ANAL               "run_anal_gsi">
<!ENTITY TN_HYBRID_RADAR_REF       "hybrid_radar_ref">
<!ENTITY TN_RUN_ENKFUPDT           "run_enkfupdt">
<!ENTITY TN_ENKF_RADAR_REF         "enkf_radarref">
<!ENTITY TN_RUN_BUFR               "run_bufr">
<!ENTITY TN_RUN_NCL                "run_ncl">
<!ENTITY TN_RUN_NCL_ZIP            "run_ncl_zip">
<!ENTITY TN_RUN_SMOKE              "run_proc_smoke">

{%- if tag  %}
<!ENTITY TAG                       "{{ tag }}">
{%- else %}
<!ENTITY TAG                       "">
{%- endif %}

<!ENTITY TN_PLOT_ALLVARS           "{{ tn_plot_allvars }}">
<!ENTITY GET_OBS                   "{{ get_obs }}">
<!ENTITY TN_GET_OBS_CCPA           "{{ tn_get_obs_ccpa }}">
<!ENTITY TN_GET_OBS_NDAS           "{{ tn_get_obs_ndas }}">
<!ENTITY TN_GET_OBS_MRMS           "{{ tn_get_obs_mrms }}">
<!ENTITY TN_VX                     "{{ tn_vx }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_APCP01H            "{{ tn_run_met_gridstat_vx_apcp01h }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_APCP03H            "{{ tn_run_met_gridstat_vx_apcp03h }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_APCP06H            "{{ tn_run_met_gridstat_vx_apcp06h }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_APCP24H            "{{ tn_run_met_gridstat_vx_apcp24h }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_REFC               "{{ tn_run_met_gridstat_vx_refc }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_RETOP              "{{ tn_run_met_gridstat_vx_retop }}">
<!ENTITY TN_RUN_MET_POINTSTAT_VX_SFC               "{{ tn_run_met_pointstat_vx_sfc }}">
<!ENTITY TN_RUN_MET_POINTSTAT_VX_UPA               "{{ tn_run_met_pointstat_vx_upa }}">
<!ENTITY TN_RUN_MET_ENSEMBLESTAT_VX_APCP01H        "{{ tn_run_met_ensemblestat_vx_apcp01h }}">
<!ENTITY TN_RUN_MET_ENSEMBLESTAT_VX_APCP03H        "{{ tn_run_met_ensemblestat_vx_apcp03h }}">
<!ENTITY TN_RUN_MET_ENSEMBLESTAT_VX_APCP06H        "{{ tn_run_met_ensemblestat_vx_apcp06h }}">
<!ENTITY TN_RUN_MET_ENSEMBLESTAT_VX_APCP24H        "{{ tn_run_met_ensemblestat_vx_apcp24h }}">
<!ENTITY TN_RUN_MET_ENSEMBLESTAT_VX_REFC           "{{ tn_run_met_ensemblestat_vx_refc }}">
<!ENTITY TN_RUN_MET_ENSEMBLESTAT_VX_RETOP          "{{ tn_run_met_ensemblestat_vx_retop }}">
<!ENTITY TN_RUN_MET_ENSEMBLESTAT_VX_SFC            "{{ tn_run_met_ensemblestat_vx_sfc }}">
<!ENTITY TN_RUN_MET_ENSEMBLESTAT_VX_UPA            "{{ tn_run_met_ensemblestat_vx_upa }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP01H    "{{ tn_run_met_gridstat_vx_ensmean_apcp01h }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP03H    "{{ tn_run_met_gridstat_vx_ensmean_apcp03h }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP06H    "{{ tn_run_met_gridstat_vx_ensmean_apcp06h }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP24H    "{{ tn_run_met_gridstat_vx_ensmean_apcp24h }}">
<!ENTITY TN_RUN_MET_POINTSTAT_VX_ENSMEAN_SFC       "{{ tn_run_met_pointstat_vx_ensmean_sfc }}">
<!ENTITY TN_RUN_MET_POINTSTAT_VX_ENSMEAN_UPA       "{{ tn_run_met_pointstat_vx_ensmean_upa }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP01H    "{{ tn_run_met_gridstat_vx_ensprob_apcp01h }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP03H    "{{ tn_run_met_gridstat_vx_ensprob_apcp03h }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP06H    "{{ tn_run_met_gridstat_vx_ensprob_apcp06h }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP24H    "{{ tn_run_met_gridstat_vx_ensprob_apcp24h }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_ENSPROB_REFC       "{{ tn_run_met_gridstat_vx_ensprob_refc }}">
<!ENTITY TN_RUN_MET_GRIDSTAT_VX_ENSPROB_RETOP      "{{ tn_run_met_gridstat_vx_ensprob_retop }}">
<!ENTITY TN_RUN_MET_POINTSTAT_VX_ENSPROB_SFC       "{{ tn_run_met_pointstat_vx_ensprob_sfc }}">
<!ENTITY TN_RUN_MET_POINTSTAT_VX_ENSPROB_UPA       "{{ tn_run_met_pointstat_vx_ensprob_upa }}">
{%- if run_task_aqm_ics %}
<!ENTITY TN_AQM_EXTRN_ICS          "{{ tn_aqm_ics }}_ext">
<!ENTITY TN_AQM_ICS                "{{ tn_aqm_ics }}">
{%- endif %}
{%- if run_task_aqm_lbcs %}
<!ENTITY TN_AQM_LBCS               "{{ tn_aqm_lbcs }}">
{%- endif %}
{%- if run_task_nexus_gfs_sfc %}
<!ENTITY TN_NEXUS_GFS_SFC          "{{ tn_nexus_gfs_sfc }}">
{%- endif %}
{%- if run_task_nexus_emission %}
<!ENTITY TN_NEXUS_EMISSION         "{{ tn_nexus_emission }}">
<!ENTITY TN_NEXUS_POST_SPLIT       "{{ tn_nexus_post_split }}">
{%- endif %}
{%- if run_task_fire_emission %}
<!ENTITY TN_FIRE_EMISSION          "{{ tn_fire_emission }}">
{%- endif %}
{%- if run_task_point_source %}
<!ENTITY TN_POINT_SOURCE           "{{ tn_point_source }}">
{%- endif %}
{%- if run_task_pre_post_stat %}
<!ENTITY TN_PRE_POST_STAT          "{{ tn_pre_post_stat }}">
{%- endif %}
{%- if run_task_post_stat_o3 %}
<!ENTITY TN_POST_STAT_O3           "{{ tn_post_stat_o3 }}">
{%- endif %}
{%- if run_task_post_stat_pm25 %}
<!ENTITY TN_POST_STAT_PM25         "{{ tn_post_stat_pm25 }}">
{%- endif %}
{%- if run_task_bias_correction_o3 %}
<!ENTITY TN_BIAS_CORRECTION_O3     "{{ tn_bias_correction_o3 }}">
{%- endif %}
{%- if run_task_bias_correction_pm25 %}
<!ENTITY TN_BIAS_CORRECTION_PM25   "{{ tn_bias_correction_pm25 }}">
{%- endif %}

<!--
Flags that specify whether to run the preprocessing and/or verification tasks.
-->
<!ENTITY RUN_TASK_MAKE_GRID      "{{ run_task_make_grid | upper }}">
<!ENTITY RUN_TASK_MAKE_OROG      "{{ run_task_make_orog | upper }}">
<!ENTITY RUN_TASK_MAKE_SFC_CLIMO "{{ run_task_make_sfc_climo | upper }}">

<!--
Number of physical cores per node for the current machine.  This is used
below in the <nodesize> tag, but that tag is not clearly documented.  This
parameter may be unnecessary since each task now has its own variable that
specifies the number of processes per node being used (the PPN_... entities).
-->
<!ENTITY NCORES_PER_NODE "{{ ncores_per_node }}">

<!--
Directories and files.
-->
<!ENTITY USHdir                   "{{ ushdir }}">
<!ENTITY JOBSdir                  "{{ jobsdir }}">
<!ENTITY SCRIPTSdir               "{{ scriptsdir }}">
<!ENTITY COMIN_BASEDIR            "{{ comin_basedir }}">
<!ENTITY COMOUT_BASEDIR           "{{ comout_basedir }}">
<!ENTITY GLOBAL_VAR_DEFNS_FP      "{{ global_var_defns_fp }}">
<!ENTITY LOAD_MODULES_RUN_TASK_FP "{{ load_modules_run_task_fp }}">
<!ENTITY EXPTDIR                  "{{ exptdir }}">

<!ENTITY OBSPATH                  "{{ obspath }}">
<!ENTITY NWGES_BASEDIR            "{{ nwges_basedir }}">
<!ENTITY ENSCTRL_COMIN_BASEDIR    "{{ ensctrl_comin_basedir }}">
<!ENTITY ENSCTRL_NWGES_BASEDIR    "{{ ensctrl_nwges_basedir }}">
<!ENTITY ENSCTRL_COMOUT_BASEDIR   "{{ ensctrl_comout_basedir }}">
<!ENTITY ENSCTRL_COMOUT_DIR       "{{ ensctrl_comout_basedir }}/{{ run }}.<cyclestr>@Y@m@d@H</cyclestr>">
<!ENTITY RRFSE_FG_ROOT            "{{ rrfse_nwges_basedir }}">
{%- if is_rtma %}
<!ENTITY FG_ROOT                  "{{ fg_rootdir }}">
{%- else %}
<!ENTITY FG_ROOT                  "{{ nwges_basedir }}">
{%- endif %}

{%- if run_envir == "nco"  %}
{%- if do_ensemble %}
<!ENTITY DYN_DIR  "{{ dataroot }}/run_fcst_prod_{{ ensmem_indx_name }}#{{ ensmem_indx_name }}#.{{ workflow_id }}_<cyclestr>@Y@m@d@H</cyclestr>/fcst_fv3lam/dyn">
<!ENTITY PHY_DIR  "{{ dataroot }}/run_fcst_prod_{{ ensmem_indx_name }}#{{ ensmem_indx_name }}#.{{ workflow_id }}_<cyclestr>@Y@m@d@H</cyclestr>/fcst_fv3lam/phy">
{%- else %}
<!ENTITY DYN_DIR  "{{ dataroot }}/run_fcst_prod.{{ workflow_id }}_<cyclestr>@Y@m@d@H</cyclestr>/fcst_fv3lam/dyn">
<!ENTITY PHY_DIR  "{{ dataroot }}/run_fcst_prod.{{ workflow_id }}_<cyclestr>@Y@m@d@H</cyclestr>/fcst_fv3lam/phy">
{%- endif %}
<!ENTITY COMIN_DIR "{{ comin_basedir }}/{{ run }}.@Y@m@d/@H">
{%- else %}
<!ENTITY DYN_DIR  "{{ comout_basedir }}/<cyclestr>@Y@m@d@H</cyclestr>{{ slash_ensmem_subdir }}/fcst_fv3lam/dyn">
<!ENTITY PHY_DIR  "{{ comout_basedir }}/<cyclestr>@Y@m@d@H</cyclestr>{{ slash_ensmem_subdir }}/fcst_fv3lam/phy">
<!ENTITY COMIN_DIR "{{ comin_basedir }}/@Y@m@d@H{{ slash_ensmem_subdir }}">
{%- endif %}

{%- if run_envir == "nco"  %}
<!ENTITY LOGDIR                   "{{ logbasedir }}/<cyclestr>@Y@m@d</cyclestr>">
<!ENTITY LOGEXT                   ".{{ workflow_id }}.log" >
{%- else %}
<!ENTITY LOGDIR                   "{{ logbasedir }}">
<!ENTITY LOGEXT                   ".log" >
{%- endif %}
<!ENTITY CMPEXT                   "_task_complete.txt">

<!ENTITY MET_INSTALL_DIR "{{ met_install_dir }}">
<!ENTITY METPLUS_PATH "{{ metplus_path }}">
<!ENTITY METPLUS_CONF "{{ metplus_conf }}">
<!ENTITY MET_CONFIG "{{ met_config }}">
<!ENTITY CCPA_OBS_DIR "{{ ccpa_obs_dir }}">
<!ENTITY MRMS_OBS_DIR "{{ mrms_obs_dir }}">
<!ENTITY NDAS_OBS_DIR "{{ ndas_obs_dir }}">

<!ENTITY WARMSTART_CYCLE_DIR  "{{ warmstart_cycle_dir }}">
{%- if do_real_time %}
<!ENTITY COMINgfs     "{{ comingfs }}">
{%- endif %}

<!--
Reservation types.  Reservations specify the queue/partition and account
to use for a given task.  The "DEFAULT" reservation type is used for all 
tasks other than TN_GET_EXTRN_ICS, TN_GET_EXTRN_LBCS, and TN_RUN_FCST; 
the "HPSS" type is used for the TN_GET_EXTRN_ICS and TN_GET_EXTRN_LBCS 
tasks; and the "FCST" type is used for the TN_RUN_FCST task.
-->

{%- if partition_default is not none %}
<!ENTITY RSRV_DEFAULT "<account>&ACCOUNT;</account><queue>&QUEUE_DEFAULT;</queue><partition>{{ partition_default }}</partition><native>&RRFS_RESERVE;</native>">
{%- else %}
<!ENTITY RSRV_DEFAULT "<account>&ACCOUNT;</account><queue>&QUEUE_DEFAULT;</queue>">
{%- endif %}
{%- if partition_hpss is not none %}
<!ENTITY RSRV_HPSS    "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_HPSS;</queue><partition>{{ partition_hpss }}</partition><native>&RRFS_POST_RESERVE;</native>">
{%- else %}
<!ENTITY RSRV_HPSS    "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_HPSS;</queue>">
{%- endif %}
{%- if partition_fcst is not none %}
<!ENTITY RSRV_FCST    "<account>&ACCOUNT;</account><queue>&QUEUE_FCST;</queue><partition>{{ partition_fcst }}</partition>">
{%- else %}
<!ENTITY RSRV_FCST    "<account>&ACCOUNT;</account><queue>&QUEUE_FCST;</queue>">
{%- endif %}
{%- if partition_analysis is not none %}
<!ENTITY RSRV_ANALYSIS    "<account>&ACCOUNT;</account><queue>&QUEUE_ANALYSIS;</queue><partition>{{ partition_analysis }}</partition>">
<!ENTITY RSRV_ENKF    "<account>&ACCOUNT;</account><queue>&QUEUE_ANALYSIS;</queue><partition>{{ partition_analysis }}</partition><native>&RRFS_RESERVE;</native>">
{%- else %}
<!ENTITY RSRV_ANALYSIS    "<account>&ACCOUNT;</account><queue>&QUEUE_ANALYSIS;</queue>">
<!ENTITY RSRV_ENKF    "<account>&ACCOUNT;</account><queue>&QUEUE_ANALYSIS;</queue>">
{%- endif %}
{%- if partition_post is not none %}
<!ENTITY RSRV_POST    "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_POST;</queue><partition>{{ partition_post }}</partition><native>&RRFS_POST_RESERVE;</native>">
{%- else %}
<!ENTITY RSRV_POST    "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_POST;</queue>">
{%- endif %}
{%- if partition_prdgen is not none %}
<!ENTITY RSRV_PRDGEN    "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_PRDGEN;</queue><partition>{{ partition_prdgen }}</partition><native>&RRFS_POST_RESERVE;</native>">
{%- else %}
<!ENTITY RSRV_PRDGEN    "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_PRDGEN;</queue>">
{%- endif %}
{%- if partition_graphics is not none %}
{%- if do_ens_graphics %}
<!ENTITY RSRV_GRAPHICS   "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_GRAPHICS;</queue><partition>{{ partition_graphics }}</partition><native>&RRFS_POST_RESERVE;</native>">
{%- else %}
<!ENTITY RSRV_GRAPHICS   "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_GRAPHICS;</queue><partition>{{ partition_graphics }}</partition><native>&RRFS_POST_RESERVE;</native>">
{%- endif %}
{%- else %}
<!ENTITY RSRV_GRAPHICS   "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_GRAPHICS;</queue><native>--exclusive</native>">
{%- endif %}

<!-- FROM RRFS_dev1 -->
{% if do_retro %}
<!ENTITY DEADLINE_PRE      "999:00:00">
<!ENTITY DEADLINE_ANAL     "999:00:00">
<!ENTITY DEADLINE_FCST     "999:30:00">
<!ENTITY DEADLINE_POST     "999:00:00">
<!ENTITY DEADLINE_GRAPHICS "999:00:00">
<!ENTITY DEADLINE_RECENTER "999:00:00">
<!ENTITY DEADLINE_SAVE_RESTART "999:00:00">
{% else %}
<!ENTITY DEADLINE_PRE      "16:00:00">
<!ENTITY DEADLINE_ANAL     "16:00:00">
<!ENTITY DEADLINE_FCST     "23:30:00">
<!ENTITY DEADLINE_POST     "24:00:00">
<!ENTITY DEADLINE_GRAPHICS "24:00:00">
<!ENTITY DEADLINE_RECENTER "24:00:00">
<!ENTITY DEADLINE_SAVE_RESTART "24:00:00">
{% endif %}

<!ENTITY START_TIME_SPINUP "{{ start_time_spinup }}">
<!ENTITY START_TIME_PROD "{{ start_time_prod }}">
<!ENTITY START_TIME_CONVENTIONAL_SPINUP "{{ start_time_conventional_spinup }}">
<!ENTITY START_TIME_LATE_ANALYSIS "{{ start_time_late_analysis }}">
<!ENTITY START_TIME_CONVENTIONAL "{{ start_time_conventional }}">
<!ENTITY START_TIME_NSSLMOSIAC   "{{ start_time_nsslmosiac }}">
<!ENTITY START_TIME_LIGHTNINGNC  "{{ start_time_lightningnc }}">
<!ENTITY START_TIME_PROCSMOKE  "{{ start_time_procsmoke }}">

{%- if do_retro %}
<!ENTITY WALL_LIMIT_PRE ''>
<!ENTITY WALL_LIMIT_ANAL ''>
<!ENTITY WALL_LIMIT_FCST ''>
<!ENTITY WALL_LIMIT_POST ''>
<!ENTITY WALL_LIMIT_BUFR ''>
<!ENTITY WALL_LIMIT_GRAPHICS ''>
<!ENTITY WALL_LIMIT_RECENTER ''>
<!ENTITY WALL_LIMIT_SAVE_RESTART ''>
{% else %}
<!ENTITY WALL_LIMIT_PRE '<deadline><cyclestr offset="&DEADLINE_PRE;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_ANAL '<deadline><cyclestr offset="&DEADLINE_ANAL;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_FCST '<deadline><cyclestr offset="&DEADLINE_FCST;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_POST '<deadline><cyclestr offset="&DEADLINE_POST;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_BUFR '<deadline><cyclestr offset="&DEADLINE_POST;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_BUFRSND '<deadline><cyclestr offset="&DEADLINE_POST;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_GRAPHICS '<deadline><cyclestr offset="&DEADLINE_GRAPHICS;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_RECENTER '<deadline><cyclestr offset="&DEADLINE_RECENTER;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_SAVE_RESTART '<deadline><cyclestr offset="&DEADLINE_SAVE_RESTART;">@Y@m@d@H@M</cyclestr></deadline>'>
{% endif %}

<!ENTITY STARTYEAR  "{{ startyear }}">
<!ENTITY STARTMONTH "{{ startmonth }}">
<!ENTITY STARTDAY   "{{ startday }}">
<!ENTITY STARTHOUR  "{{ starthour }}">

<!ENTITY ENDYEAR  "{{ endyear }}">
<!ENTITY ENDMONTH "{{ endmonth }}">
<!ENTITY ENDDAY   "{{ endday }}">
<!ENTITY ENDHOUR  "{{ endhour }}">

]>

<!--
************************************************************************
************************************************************************
-->

{%- if do_retro %}
<workflow realtime="F" scheduler="&SCHED;" cyclethrottle="200" taskthrottle="{{ taskthrottle }}">
{% else %}
<workflow realtime="T" scheduler="&SCHED;" cyclethrottle="24" taskthrottle="{{ taskthrottle }}" cyclelifespan="01:00:00:00">
{%- endif %}
{# Double quotes are required inside the strftime! Expect an error from reading the template if using single quotes. #}

<!--
************************************************************************
************************************************************************
-->
{%- if not do_rrfs_dev %}
  <cycledef group="at_start">{{ cdate_first_cycl.strftime("%M %H %d %m %Y *") }}</cycledef>
  <cycledef group="initial">{{ cdate_first_cycl.strftime("%M %H %d %m %Y *") }}</cycledef>

{%- if cycl_next != date_first_cycl %}
  <cycledef group="cycled">
    {{- cycl_next ~ " " ~ date_last_cycl ~ " " ~ cycl_freq -}}
  </cycledef>
{%- endif %}

{%- if fcst_len_hrs == -1 %}
  {%- if num_fcst_len_cycl >= 1 %}
  <cycledef group="cyc_1st"> {{- date_first_cycl ~ " " ~ date_1st_last_cycl ~ " " ~ "24:00:00" -}} </cycledef>
  {%- endif %}
  {%- if num_fcst_len_cycl >= 2 %}
  <cycledef group="cyc_2nd"> {{- date_2nd_cycl ~ " " ~ date_2nd_last_cycl ~ " " ~ "24:00:00" -}} </cycledef>
  {%- endif %}
  {%- if num_fcst_len_cycl >= 3 %}
  <cycledef group="cyc_3rd"> {{- date_3rd_cycl ~ " " ~ date_3rd_last_cycl ~ " " ~ "24:00:00" -}} </cycledef>
  {%- endif %}
  {%- if num_fcst_len_cycl >= 4 %}
  <cycledef group="cyc_4th"> {{- date_4th_cycl ~ " " ~ date_4th_last_cycl ~ " " ~ "24:00:00" -}} </cycledef>
  {%- endif %}
{%- endif %}

  <cycledef group="boundary">{{- date_first_cycl ~ " " ~ date_last_cycl ~ " " ~ cycl_freq -}}</cycledef>
  <cycledef group="boundary_long">{{- date_first_cycl ~ " " ~ date_last_cycl ~ " " ~ cycl_freq -}}</cycledef>

  <cycledef group="spinupcyc">{{- date_first_cycl ~ " " ~ date_last_cycl ~ " " ~ cycl_freq -}}</cycledef>
  <cycledef group="prodcyc">{{- date_first_cycl ~ " " ~ date_last_cycl ~ " " ~ cycl_freq -}}</cycledef>
  <cycledef group="prodcyc_long">{{- date_first_cycl ~ " " ~ date_last_cycl ~ " " ~ cycl_freq -}}</cycledef>

{%- if do_save_input %}
  <cycledef group="saveinputcyc"> {{ date_first_cycl ~ " " ~ date_last_cycl ~ " " ~ cycl_freq }} </cycledef>
{%- endif %}
  <cycledef group="recentercyc"> {{ date_first_cycl ~ " " ~ date_last_cycl ~ " " ~ cycl_freq }} </cycledef>
  <cycledef group="archive">  {{ date_first_cycl ~ " " ~ date_last_cycl ~ " " ~ cycl_freq }} </cycledef> 

{%- else -%}
<!--
************************************************************************
************************************************************************
-->
  <cycledef group="at_start">{{ at_start_cycledef }} </cycledef>
  <cycledef group="initial"> {{ initial_cycledef }} </cycledef>
  <cycledef group="boundary"> {{ boundary_cycledef }} </cycledef>
  <cycledef group="boundary_long"> {{ boundary_long_cycledef }} </cycledef>

  <cycledef group="spinupcyc"> {{ spinup_cycledef }} </cycledef>
  <cycledef group="prodcyc"> {{ prod_cycledef }} </cycledef>
  <cycledef group="prodcyc_long"> {{ prodlong_cycledef }} </cycledef>

{%- if do_save_input %}
  <cycledef group="saveinputcyc"> {{ saveinput_cycledef }} </cycledef>
{%- endif %}
  <cycledef group="recentercyc"> {{ recenter_cycledef }} </cycledef>
  <cycledef group="archive">  {{ archive_cycledef }} </cycledef> 

{%- endif -%}
<!--
************************************************************************
************************************************************************
-->

  <log>
  {%- if run_envir == "nco"  %}
    &LOGDIR;/FV3LAM_wflow.{{ workflow_id }}.log
  {%- else %}
    &LOGDIR;/FV3LAM_wflow.log
  {%- endif %}
  </log>

<!-- 
The following command works to call the J-job for a given task (in this
case the TN_MAKE_GRID task) if in the script LOAD_MODULES_RUN_TASK_FP we 
do NOT call exec to run the J-job.  The command first sources the script
LOAD_MODULES_RUN_TASK_FP and then runs the J-job, so it is simpler than
calling exec and thus preferred if NCO accepts it.  Note that the portion
of the command that sources LOAD_MODULES_RUN_TASK_FP also passes an 
argument to it (the argument being the name of the task).  This works in
bash but it probably won't work in sh.

If this method is acceptable to NCO, then for clarity maybe we can
source LOAD_MODULES_RUN_TASK_FP within the J-job instead of here since
we are already sourcing other files in the J-job anyway.
-->
<!--
    <command>{ . &LOAD_MODULES_RUN_TASK_FP; "&TN_MAKE_GRID;";
               &JOBSdir;/JREGIONAL_MAKE_GRID;
             }</command>
-->
<!--
The following command works if we call exec in LOAD_MODULES_RUN_TASK_FP
to run the J-job.  This passes the J-job script as the second argument
to LOAD_MODULES_RUN_TASK_FP (the first argument is the task name).  The
J-job then uses exec to run the J-job (while also terminating the LOAD_-
MODULES_RUN_TASK_FP script.
-->

<!--
************************************************************************
************************************************************************
-->
{%- if run_task_make_grid %}
  <task name="&TN_MAKE_GRID;" cycledefs="at_start" maxtries="{{ maxtries_make_grid }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_MAKE_GRID;" "&JOBSdir;/JREGIONAL_MAKE_GRID"</command>
    <nodes>{{ nnodes_make_grid }}:ppn={{ ppn_make_grid }}</nodes>
    <walltime>{{ wtime_make_grid }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_MAKE_GRID;</jobname>
    <join>&LOGDIR;/&TN_MAKE_GRID;&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_make_orog %}
  <task name="&TN_MAKE_OROG;" cycledefs="at_start" maxtries="{{ maxtries_make_orog }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_MAKE_OROG;" "&JOBSdir;/JREGIONAL_MAKE_OROG"</command>
    <nodes>{{ nnodes_make_orog }}:ppn={{ ppn_make_orog }}</nodes>
    <walltime>{{ wtime_make_orog }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_MAKE_OROG;</jobname>
    <join>&LOGDIR;/&TN_MAKE_OROG;&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>

    <dependency>
      <or>
<!--        <taskdep task="make_grid"/> -->
        <datadep age="00:00:00:05">&EXPTDIR;/grid/&TN_MAKE_GRID;&CMPEXT;</datadep>
        <streq><left>&RUN_TASK_MAKE_GRID;</left><right>FALSE</right></streq>
      </or>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_make_sfc_climo %}
  <task name="&TN_MAKE_SFC_CLIMO;" cycledefs="at_start" maxtries="{{ maxtries_make_sfc_climo }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_MAKE_SFC_CLIMO;" "&JOBSdir;/JREGIONAL_MAKE_SFC_CLIMO"</command>
    <nodes>{{ nnodes_make_sfc_climo }}:ppn={{ ppn_make_sfc_climo }}</nodes>
    <walltime>{{ wtime_make_sfc_climo }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_MAKE_SFC_CLIMO;</jobname>
    <join>&LOGDIR;/&TN_MAKE_SFC_CLIMO;&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>

    <dependency>
      <and>
        <or>
<!--          <taskdep task="&TN_MAKE_GRID;"/> -->
          <datadep age="00:00:00:05">&EXPTDIR;/grid/&TN_MAKE_GRID;&CMPEXT;</datadep>
          <streq><left>&RUN_TASK_MAKE_GRID;</left><right>FALSE</right></streq>
        </or>
        <or>
<!--          <taskdep task="&TN_MAKE_OROG;"/> -->
          <datadep age="00:00:00:05">&EXPTDIR;/orog/&TN_MAKE_OROG;&CMPEXT;</datadep>
          <streq><left>&RUN_TASK_MAKE_OROG;</left><right>FALSE</right></streq>
        </or>
      </and>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_nexus_gfs_sfc %}
  <task name="&TN_NEXUS_GFS_SFC;" cycledefs="prodcyc" maxtries="{{ maxtries_nexus_gfs_sfc }}">

  {%- if do_real_time %}
    &RSRV_DEFAULT;
  {%- else %}
    &RSRV_HPSS;
  {%- endif %}
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_NEXUS_GFS_SFC;" "&JOBSdir;/JREGIONAL_NEXUS_GFS_SFC"</command>
    <nodes>{{ nnodes_nexus_gfs_sfc }}:ppn={{ ppn_nexus_gfs_sfc }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
  {%- if not do_real_time %}   
    <memory>{{ mem_nexus_gfs_sfc }}</memory>
  {%- endif %}
  {%- endif %}
    <walltime>{{ wtime_nexus_gfs_sfc }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
    <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}
    <jobname>&TAG;&TN_NEXUS_GFS_SFC;</jobname>
    <join>&LOGDIR;/&TN_NEXUS_GFS_SFC;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

  {%- if do_real_time %}
    <dependency>
      <datadep age="00:00:00:05"><cyclestr offset="-{{- cycl_freq -}}">&COMINgfs;/gfs.@Y@m@d/@H/atmos</cyclestr></datadep>
    </dependency>
  {%- endif %}

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_nexus_emission %}
<!--
************************************************************************
************************************************************************
-->
  <metatask name="&TN_NEXUS_EMISSION;">
    <var name="nspt">{% for h in range(0, num_split_nexus) %}{{ " %02d" % h }}{% endfor %}</var>
      <task name="&TN_NEXUS_EMISSION;_#nspt#" cycledefs="prodcyc" maxtries="{{ maxtries_nexus_emission }}">
        &RSRV_DEFAULT;
        <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_NEXUS_EMISSION;" "&JOBSdir;/JREGIONAL_NEXUS_EMISSION"</command>
        {%- if machine in ["HERA"]  %}
        <nodes>{{ nnodes_nexus_emission }}:ppn={{ ppn_nexus_emission }}</nodes>
        <native>{{ native_nexus_emission }}</native>
        {%- elif machine in ["WCOSS2"]  %}
        <nodes>{{ nnodes_nexus_emission }}:ppn={{ ppn_nexus_emission }}:tpp={{ omp_num_threads_nexus_emission }}</nodes>
        <native>&SCHED_NATIVE_CMD;</native>
        {%- else %}
        <nodes>{{ nnodes_nexus_emission }}:ppn={{ ppn_nexus_emission }}</nodes>    
        {%- endif %}
        <walltime>{{ wtime_nexus_emission }}</walltime>
        <nodesize>&NCORES_PER_NODE;</nodesize>
        <jobname>&TAG;&TN_NEXUS_EMISSION;_#nspt#</jobname>
        <join>&LOGDIR;/&TN_NEXUS_EMISSION;<cyclestr>_@Y@m@d@H_s#nspt#&LOGEXT;</cyclestr></join>

        <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
        <envar><name>USHdir</name><value>&USHdir;</value></envar>
	    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
        <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
        <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
        <envar><name>nspt</name><value>#nspt#</value></envar>
	    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
	    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
{%- if run_task_nexus_gfs_sfc %}	
        <dependency>
          <taskdep task="&TN_NEXUS_GFS_SFC;"/>    
	    </dependency>
{%- endif %}
      </task>
  </metatask>      
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_NEXUS_POST_SPLIT;" cycledefs="prodcyc" maxtries="{{ maxtries_nexus_post_split }}">
    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_NEXUS_POST_SPLIT;" "&JOBSdir;/JREGIONAL_NEXUS_POST_SPLIT"</command>
    <nodes>{{ nnodes_nexus_post_split }}:ppn={{ ppn_nexus_post_split }}</nodes>
    <walltime>{{ wtime_nexus_post_split }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <jobname>&TAG;&TN_NEXUS_POST_SPLIT;</jobname>
    <join>&LOGDIR;/&TN_NEXUS_POST_SPLIT;<cyclestr>_@Y@m@d@H&LOGEXT;</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <metataskdep metatask="&TN_NEXUS_EMISSION;"/>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_fire_emission %}
  <task name="&TN_FIRE_EMISSION;" cycledefs="prodcyc" maxtries="{{ maxtries_fire_emission }}">

  {%- if do_aqm_save_fire %}
    &RSRV_HPSS;
  {%- else %}
    &RSRV_DEFAULT;
  {%- endif %}
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_FIRE_EMISSION;" "&JOBSdir;/JREGIONAL_FIRE_EMISSION"</command>
    <nodes>{{ nnodes_fire_emission }}:ppn={{ ppn_fire_emission }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
  {%- if not do_real_time %}
    <memory>{{ mem_fire_emission }}</memory>
  {%- endif %}
  {%- endif %}
    <walltime>{{ wtime_fire_emission }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
    <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}
    <jobname>&TAG;&TN_FIRE_EMISSION;</jobname>
    <join>&LOGDIR;/&TN_FIRE_EMISSION;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_point_source %}
  <task name="&TN_POINT_SOURCE;" cycledefs="prodcyc" maxtries="{{ maxtries_point_source }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_POINT_SOURCE;" "&JOBSdir;/JREGIONAL_POINT_SOURCE"</command>
    <nodes>{{ nnodes_point_source }}:ppn={{ ppn_point_source }}</nodes>    
    <walltime>{{ wtime_point_source }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <jobname>&TAG;&TN_POINT_SOURCE;</jobname>
    <join>&LOGDIR;/&TN_POINT_SOURCE;<cyclestr>_@Y@m@d@H&LOGEXT;</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>    
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
<!-- <taskdep task="&TN_MAKE_GRID;"/> -->
      <or>
        <datadep age="00:00:00:05">&EXPTDIR;/grid/&TN_MAKE_GRID;&CMPEXT;</datadep>
        <streq><left>&RUN_TASK_MAKE_GRID;</left><right>FALSE</right></streq>
      </or>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if not do_ensfcst %}
{%- if do_rrfs_dev %}

<!-- beginning of meta block for prod spinup  -->
{%- if do_smoke_dust or do_nonvar_cldanal or do_refl2tten or do_enkf_radar_ref or do_envar_radar_ref %}
<metatask name="data_preprocessing">
  
{%- if do_spinup %}
  <var name="cycletype">spinupcyc prodcyc,prodcyc_long</var>
  <var name="type">spinup prod</var>
{% else %}
  <var name="cycletype">prodcyc,prodcyc_long</var>
  <var name="type">prod</var>
{%- endif %}

<!--
************************************************************************
************************************************************************
-->
{%- if do_smoke_dust %}
  <task name="&TN_PROCESS_SMOKE;_#type#" cycledefs="#cycletype#"  maxtries="{{ maxtries_process_smoke }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_SMOKE;" "&JOBSdir;/JREGIONAL_PROCESS_SMOKE"</command>

    <nodes>{{ nnodes_process_smoke }}:ppn={{ ppn_process_smoke }}</nodes>
    <walltime>{{ wtime_process_smoke }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_process_smoke }}</memory>
  {%- endif %}

    <jobname>&TAG;&TN_PROCESS_SMOKE;_#type#</jobname>
    <join>&LOGDIR;/&TN_PROCESS_SMOKE;_#type#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>#type#</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>NWGES_DIR</name><value>&NWGES_BASEDIR;</value></envar>

    <dependency>
      <and>
        <timedep><cyclestr offset="&START_TIME_PROCSMOKE;">@Y@m@d@H@M00</cyclestr></timedep>
      </and>
    </dependency>

  </task>
{%- endif %}

{%- if do_nonvar_cldanal or do_refl2tten or do_enkf_radar_ref or do_envar_radar_ref %}
<!--
************************************************************************
************************************************************************
--> 
  <task name="&TN_PROCESS_RADAR_REF;_#type#" cycledefs="#cycletype#"  maxtries="{{ maxtries_process_radarref }}">
    
    &RSRV_DEFAULT;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_ANAL;" "&JOBSdir;/JREGIONAL_PROCESS_RADARREF"</command>
      
    <nodes>{{ nnodes_process_radarref }}:ppn={{ ppn_process_radarref }}</nodes>
    <walltime>{{ wtime_process_radarref }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_PROCESS_RADAR_REF;_#type#</jobname>
    <join>&LOGDIR;/&TN_PROCESS_RADAR_REF;_#type#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>
        
    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>#type#</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>RADAR_REF_THINNING</name><value>{{ radar_ref_thinning }}</value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
        
    <dependency>
      <and>
        <timedep><cyclestr offset="&START_TIME_NSSLMOSIAC;">@Y@m@d@H@M00</cyclestr></timedep>
      </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
{%- if do_nldn_lght %}
  <task name="&TN_PROCESS_LIGHTNING;_#type#" cycledefs="#cycletype#"  maxtries="{{ maxtries_process_lightning }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_ANAL;" "&JOBSdir;/JREGIONAL_PROCESS_LIGHTNING"</command>

    <nodes>{{ nnodes_process_lightning }}:ppn={{ ppn_process_lightning }}</nodes>
    <walltime>{{ wtime_process_lightning }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_PROCESS_LIGHTNING;_#type#</jobname>
    <join>&LOGDIR;/&TN_PROCESS_LIGHTNING;_#type#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>#type#</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>

    <dependency>
      <and>
        <timedep><cyclestr offset="&START_TIME_LIGHTNINGNC;">@Y@m@d@H@M00</cyclestr></timedep>
      </and>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_PROCESS_BUFR;_#type#" cycledefs="#cycletype#"  maxtries="{{ maxtries_process_bufr }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_ANAL;" "&JOBSdir;/JREGIONAL_PROCESS_BUFR"</command>

    <nodes>{{ nnodes_process_bufr }}:ppn={{ ppn_process_bufr }}</nodes>
    <walltime>{{ wtime_process_bufr }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_process_bufr }}</memory>
  {%- endif %}
    <jobname>&TAG;&TN_PROCESS_BUFR;_#type#</jobname>
    <join>&LOGDIR;/&TN_PROCESS_BUFR;_#type#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>#type#</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>

    <dependency>
      <and>
        <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
      </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
</metatask>
{%- endif %}
<!-- end of meta block for prod spinup  -->

{%- endif %}
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{% if not is_rtma %}

{%- if do_ensemble %}
 <metatask name="run_ensemble_pre">

  <var name="{{ ensmem_indx_name }}">{% for m in range(1, num_ens_members+1) %}{{ "%03d " % m }}{% endfor %}</var>
  {%- if do_enscontrol %}
    <var name="subdirGE">/gec00{% for m in range(2, num_ens_members+1) %}{{ " /gep%02d"%m }}{% endfor %}</var>
    <var name="memNameWRF">_mem0000{% for m in range(2, num_ens_members+1) %}{{ " _mem%04d"%m }}{% endfor %} </var>
  {%- else %}
    <var name="subdirGE">{% for m in range(1, num_ens_members+1) %}{{ " /gep%02d"%m }}{% endfor %}</var>
    <var name="memNameWRF">{% for m in range(1, num_ens_members+1) %}{{ " _mem%04d"%m }}{% endfor %} </var>
    <var name="memNameGDAS">{% for m in range(1, num_ens_members+1) %}{{ " mem%03d"%m }}{% endfor %} </var>
  {%- endif %}
    <var name="subdirGDAS">{% for m in range(1, num_ens_members+1) %}{{ " /mem%03d"%m }}{% endfor %}</var>
{%- endif %}

<!--
************************************************************************
************************************************************************
-->
{%- if run_task_aqm_ics %}
<!--
************************************************************************
************************************************************************
-->
  {%- if not coldstart %}
  <task name="&TN_AQM_EXTRN_ICS;" cycledefs="at_start" maxtries="{{ maxtries_aqm_ics }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_AQM_ICS;" "&JOBSdir;/JREGIONAL_AQM_ICS"</command>
    <nodes>{{ nnodes_aqm_ics }}:ppn={{ ppn_aqm_ics }}</nodes>
    <walltime>{{ wtime_aqm_ics }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <jobname>&TAG;&TN_AQM_EXTRN_ICS;</jobname>
    <join>&LOGDIR;/&TN_AQM_EXTRN_ICS;<cyclestr>_@Y@m@d@H&LOGEXT;</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>    
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>PREV_CYCLE_DIR</name><value>&WARMSTART_CYCLE_DIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&TN_MAKE_ICS;"/>
        <or>
          <datadep age="00:00:00:05">&WARMSTART_CYCLE_DIR;/RESTART/<cyclestr>@Y@m@d.@H@M@S.fv_tracer.res.tile1.nc</cyclestr></datadep>
          <datadep age="00:00:00:05">&WARMSTART_CYCLE_DIR;/RESTART/fv_tracer.res.tile1.nc</datadep>
        </or>
      </and>
    </dependency>

  </task>
  {%- endif %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_AQM_ICS;" cycledefs="cycled" maxtries="{{ maxtries_aqm_ics }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_AQM_ICS;" "&JOBSdir;/JREGIONAL_AQM_ICS"</command>
    <nodes>{{ nnodes_aqm_ics }}:ppn={{ ppn_aqm_ics }}</nodes>
    <walltime>{{ wtime_aqm_ics }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <jobname>&TAG;&TN_AQM_ICS;</jobname>
    <join>&LOGDIR;/&TN_AQM_ICS;<cyclestr>_@Y@m@d@H&LOGEXT;</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>PREV_CYCLE_DIR</name><value><cyclestr offset="-{{- cycl_freq -}}">&COMIN_DIR;</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&TN_MAKE_ICS;"/>
        <or>
          <datadep age="00:00:00:05"><cyclestr offset="-{{- cycl_freq -}}">&COMIN_DIR;</cyclestr>/RESTART/<cyclestr>@Y@m@d.@H@M@S.fv_tracer.res.tile1.nc</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-{{- cycl_freq -}}">&COMIN_DIR;</cyclestr>/RESTART/fv_tracer.res.tile1.nc</datadep>
        </or>
      </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_aqm_lbcs %}
  <task name="&TN_AQM_LBCS;" cycledefs="prodcyc" maxtries="{{ maxtries_aqm_lbcs }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_AQM_LBCS;" "&JOBSdir;/JREGIONAL_AQM_LBCS"</command>
    <nodes>{{ nnodes_aqm_lbcs }}:ppn={{ ppn_aqm_lbcs }}</nodes>
    <walltime>{{ wtime_aqm_lbcs }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <jobname>&TAG;&TN_AQM_LBCS;</jobname>
    <join>&LOGDIR;/&TN_AQM_LBCS;<cyclestr>_@Y@m@d@H&LOGEXT;</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>    
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
        <taskdep task="&TN_MAKE_LBCS;"/>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_get_extrn_ics %}

  <task name="&TN_GET_EXTRN_ICS;{{ uscore_ensmem_name }}" cycledefs="initial" maxtries="{{ maxtries_get_extrn_ics }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_GET_EXTRN_ICS;" "&JOBSdir;/JREGIONAL_GET_EXTRN_MDL_FILES"</command>

    <nodes>{{ nnodes_get_extrn_ics }}:ppn={{ ppn_get_extrn_ics }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_get_extrn_ics }}</memory>
  {%- endif %}
    <walltime>{{ wtime_get_extrn_ics }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
    <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

    <jobname>&TAG;&TN_GET_EXTRN_ICS;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_GET_EXTRN_ICS;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>ICS_OR_LBCS</name><value>ICS</value></envar>
    <envar><name>GEFS_INPUT_SUBDIR</name><value>#subdirGE#</value></envar>
    <envar><name>WRF_MEM_NAME</name><value>#memNameWRF#</value></envar>
    <envar><name>GDASENKF_INPUT_SUBDIR</name><value>#subdirGDAS#</value></envar>
    <envar><name>GDAS_MEM_NAME</name><value>#memNameGDAS#</value></envar>

   {%- if not do_retro %}
    <dependency>
      {%- if machine in ["WCOSS2"]  %}
      {%- if fv3gfs_file_fmt_ics in ["netcdf"] %}
      <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/gfs.@Y@m@d/@H/atmos/gfs.t@Hz.atmf{{ "%03d" % extrn_mdl_ics_offset_hrs }}.nc</cyclestr></datadep>
      {% else %}
      {%- if extrn_mdl_name_ics in ["GEFS"] %}
      <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/gefs.@Y@m@d/@H/atmos/pgrb2bp5/#subdirGE#.t@Hz.pgrb2b.0p50.f{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
      {% else %}
      <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/gfs.@Y@m@d/@H/atmos/gfs.t@Hz.pgrb2.0p25.f{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
      {%- endif %}
      {%- endif %}
      {%- elif machine in ["ORION"]  %}
      <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H000{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
      {% else %}
      {%- if extrn_mdl_name_ics in ["GEFS"] %}
      <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/#subdirGE#/@y@j@H000{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
      {%- elif extrn_mdl_name_ics in ["GDASENKF"] %}
      <and>
      {%- if machine in ["HERA"] %}
        <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/enkfgdas.@Y@m@d/@H/atmos/#subdirGDAS#/gdas.t@Hz.atmf00{{ extrn_mdl_ics_offset_hrs }}.nc</cyclestr></datadep>
        <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/enkfgdas.@Y@m@d/@H/atmos/#subdirGDAS#/gdas.t@Hz.sfcf00{{ extrn_mdl_ics_offset_hrs }}.nc</cyclestr></datadep>
      {%- elif machine in ["JET"] %}
        <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H00.gdas.t@Hz.atmf00{{ extrn_mdl_ics_offset_hrs }}.#memNameGDAS#.nc</cyclestr></datadep>
        <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H00.gdas.t@Hz.sfcf00{{ extrn_mdl_ics_offset_hrs }}.#memNameGDAS#.nc</cyclestr></datadep>
      {%- endif %}
      </and>
      {%- elif extrn_mdl_name_ics in ["HRRRDAS"] %}
      <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@Y@m@d@H/postprd#memNameWRF#/wrfnat#memNameWRF#_00.grib2</cyclestr></datadep>
      {%- else %}
      {%- if machine in ["JET"] %}
      <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H000{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
      {%- elif machine in ["HERA"] %}
      <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H000{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
      {%- endif %}
      {%- endif %}
      {%- endif %}
    </dependency>
   {%- endif %}

{%- if do_real_time %}
    <dependency>
      <datadep age="00:00:00:05"><cyclestr offset="-{{- cycl_freq -}}">&COMINgfs;/gfs.@Y@m@d/@H/atmos</cyclestr></datadep>
    </dependency>
{%- endif %}

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_get_extrn_lbcs %}

  <task name="&TN_GET_EXTRN_LBCS;{{ uscore_ensmem_name }}" cycledefs="boundary" maxtries="{{ maxtries_get_extrn_lbcs }}">

    &WALL_LIMIT_PRE;
    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_GET_EXTRN_LBCS;" "&JOBSdir;/JREGIONAL_GET_EXTRN_MDL_FILES"</command>

    <nodes>{{ nnodes_get_extrn_lbcs }}:ppn={{ ppn_get_extrn_lbcs }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_get_extrn_lbcs }}</memory>
  {%- endif %}
    <walltime>{{ wtime_get_extrn_lbcs }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize> 
  {%- if machine not in ["WCOSS2"] %}
    <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

    <jobname>&TAG;&TN_GET_EXTRN_LBCS;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_GET_EXTRN_LBCS;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>EXTRN_MDL_NAME</name><value>{{ extrn_mdl_name_lbcs }}</value></envar>
    <envar><name>ICS_OR_LBCS</name><value>LBCS</value></envar>
    <envar><name>BOUNDARY_LEN</name><value>{{ boundary_len_hrs }}</value></envar>
    <envar><name>GEFS_INPUT_SUBDIR</name><value>#subdirGE#</value></envar>
    <envar><name>GDASENKF_INPUT_SUBDIR</name><value>#subdirGDAS#</value></envar>
    <envar><name>GDAS_MEM_NAME</name><value>#memNameGDAS#</value></envar>

   {%- if not do_retro %}
    <dependency>
       <and>
         {%- for h in range(extrn_mdl_lbcs_offset_hrs, boundary_len_hrs+extrn_mdl_lbcs_offset_hrs+1, lbc_spec_intvl_hrs) %}
         {%- if machine in ["WCOSS2"]  %}
         {%- if fv3gfs_file_fmt_lbcs in ["netcdf"]  %}
         <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/gfs.@Y@m@d/@H/atmos/gfs.t@Hz.atmf{{ "%03d" % h }}.nc</cyclestr></datadep>
         {%- else %}
         <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/gfs.@Y@m@d/@H/atmos/gfs.t@Hz.pgrb2.0p25.f{{ "%03d" % h }}</cyclestr></datadep>
         {%- endif %}
         {%- elif machine in ["ORION"]  %}
         {%- if fv3gfs_file_fmt_lbcs in ["netcdf"]  %}
         <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/gfs.@Y@m@d/@H/atmos/gfs.t@Hz.atmf{{ "%03d" % h }}.nc</cyclestr></datadep>
         {%- else %}
         <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/gfs.@Y@m@d/@H/atmos/gfs.t@Hz.pgrb2.0p25.f{{ "%03d" % h }}</cyclestr></datadep>
         {%- endif %}
         {%- elif machine in ["ORION"]  %}
         <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
         {%- else %}
         {%- if extrn_mdl_name_lbcs in ["GEFS"] %}
         <datadep age="00:00:05:00"> <cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/#subdirGE#/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
         {%- elif extrn_mdl_name_lbcs in ["GDASENKF"] %}
         {%- if machine in ["HERA"] %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/enkfgdas.@Y@m@d/@H/atmos/#subdirGDAS#/gdas.t@Hz.atmf{{ "%03d" % h }}.nc</cyclestr></datadep>
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/enkfgdas.@Y@m@d/@H/atmos/#subdirGDAS#/gdas.t@Hz.sfcf{{ "%03d" % h }}.nc</cyclestr></datadep>
         {%- elif machine in ["JET"] %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H00.gdas.t@Hz.atmf{{ "%03d" % h }}.#memNameGDAS#.nc</cyclestr></datadep>
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H00.gdas.t@Hz.sfcf{{ "%03d" % h }}.#memNameGDAS#.nc</cyclestr></datadep>
         {%- endif %}
         {%- else %}
         {%- if machine in ["JET"] %}
         <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
         {%- elif machine in ["HERA"] %}
         <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
         {%- endif %}
         {%- endif %}
         {%- endif %}
         {%- endfor %}
       </and>
    </dependency>
   {%- endif %}

{%- if do_real_time %}
    <dependency>
      <datadep age="00:00:00:05"><cyclestr offset="-{{- cycl_freq -}}">&COMINgfs;/gfs.@Y@m@d/@H/atmos</cyclestr></datadep>
    </dependency>
{%- endif %}

  </task>

{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if do_rrfs_dev %}
{%- if run_task_get_extrn_lbcs %}

  <task name="&TN_GET_EXTRN_LBCS_LONG;{{ uscore_ensmem_name }}" cycledefs="boundary_long" maxtries="{{ maxtries_get_extrn_lbcs }}">

    &WALL_LIMIT_PRE;
    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_GET_EXTRN_LBCS;" "&JOBSdir;/JREGIONAL_GET_EXTRN_MDL_FILES"</command>

    <nodes>{{ nnodes_get_extrn_lbcs }}:ppn={{ ppn_get_extrn_lbcs }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_get_extrn_lbcs }}</memory>
  {%- endif %}
    <walltime>{{ wtime_get_extrn_lbcs }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
    <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

    <jobname>&TAG;&TN_GET_EXTRN_LBCS_LONG;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_GET_EXTRN_LBCS_LONG;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>EXTRN_MDL_NAME</name><value>{{ extrn_mdl_name_lbcs }}</value></envar>
    <envar><name>ICS_OR_LBCS</name><value>LBCS</value></envar>
    <envar><name>BOUNDARY_LEN</name><value>{{ boundary_len_hrs }}</value></envar>
    <envar><name>GEFS_INPUT_SUBDIR</name><value>#subdirGE#</value></envar>
    <envar><name>GDASENKF_INPUT_SUBDIR</name><value>#subdirGDAS#</value></envar>
    <envar><name>GDAS_MEM_NAME</name><value>#memNameGDAS#</value></envar>

   {%- if not do_retro %}
    <dependency>
       <and>
         {%- for h in range(extrn_mdl_lbcs_offset_hrs, boundary_long_len_hrs+extrn_mdl_lbcs_offset_hrs+1, lbc_spec_intvl_hrs) %}
         {%- if machine in ["WCOSS2"] %}
         <datadep age="00:00:05:00"><cyclestr>{{ extrn_mdl_sysbasedir_lbcs }}/gfs.@Y@m@d/@H/atmos/gfs.t@Hz.pgrb2.0p25.f{{ "%03d" % h }}</cyclestr></datadep>
         {%- elif machine in ["ORION"]  %}
         <datadep age="00:00:05:00"><cyclestr>{{ extrn_mdl_sysbasedir_lbcs }}/gdas.@Y@m@d/@H/atmos/gdas.t@Hz.atmf{{ "%03d" % h }}.nc</cyclestr></datadep>
         {%- else %}
         {%- if extrn_mdl_name_lbcs in ["GEFS"] %}
         <datadep age="00:00:05:00"> <cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/#subdirGE#/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
         {%- else %}
         <datadep age="00:00:05:00"> <cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
         {%- endif %}
         {%- endif %}
         {%- endfor %}
       </and>
    </dependency>
   {%- endif %}

  </task>

{%- endif %}
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_make_ics %}
  <task name="&TN_MAKE_ICS;{{ uscore_ensmem_name }}" cycledefs="initial" maxtries="{{ maxtries_make_ics }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_MAKE_ICS;" "&JOBSdir;/JREGIONAL_MAKE_ICS"</command>

    <nodes>{{ nnodes_make_ics }}:ppn={{ ppn_make_ics }}</nodes>
    <walltime>{{ wtime_make_ics }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_MAKE_ICS;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_MAKE_ICS;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&TN_GET_EXTRN_ICS;{{ uscore_ensmem_name }}"/>
        <or>
<!--          <taskdep task="&TN_MAKE_GRID;"/> -->
          <datadep age="00:00:00:05">&EXPTDIR;/grid/&TN_MAKE_GRID;&CMPEXT;</datadep>
          <streq><left>&RUN_TASK_MAKE_GRID;</left><right>FALSE</right></streq>
        </or>
        <or>
<!--          <taskdep task="&TN_MAKE_OROG;"/> -->
          <datadep age="00:00:00:05">&EXPTDIR;/orog/&TN_MAKE_OROG;&CMPEXT;</datadep>
          <streq><left>&RUN_TASK_MAKE_OROG;</left><right>FALSE</right></streq>
        </or>
        <or>
<!--          <taskdep task="&TN_MAKE_SFC_CLIMO;"/> -->
          <datadep age="00:00:00:05">&EXPTDIR;/sfc_climo/&TN_MAKE_SFC_CLIMO;&CMPEXT;</datadep>
          <streq><left>&RUN_TASK_MAKE_SFC_CLIMO;</left><right>FALSE</right></streq>
        </or>
      </and>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_make_lbcs %}
<metatask name="&TN_MAKE_LBCS;{{ uscore_ensmem_name }}">
  <var name="bcgrp">{% for h in range(0, boundary_proc_group_num) %}{{ " %02d" % h  }}{% endfor %}</var>

  <task name="&TN_MAKE_LBCS;_#bcgrp#{{ uscore_ensmem_name }}" cycledefs="boundary,boundary_long" maxtries="{{ maxtries_make_lbcs }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_MAKE_LBCS;" "&JOBSdir;/JREGIONAL_MAKE_LBCS"</command>

    <nodes>{{ nnodes_make_lbcs }}:ppn={{ ppn_make_lbcs }}</nodes>
    <walltime>{{ wtime_make_lbcs }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_MAKE_LBCS;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_MAKE_LBCS;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H_#bcgrp#</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>bcgrp</name><value>#bcgrp#</value></envar>
    <envar><name>bcgrpnum</name><value>{{ boundary_proc_group_num }}</value></envar>

    <dependency>
      <and>
        <or>
          <taskdep task="&TN_GET_EXTRN_LBCS;{{ uscore_ensmem_name }}"/>
          <taskdep task="&TN_GET_EXTRN_LBCS_LONG;{{ uscore_ensmem_name }}"/>
        </or>
        <or>
<!--          <taskdep task="&TN_MAKE_GRID;"/> -->
          <datadep age="00:00:00:05">&EXPTDIR;/grid/&TN_MAKE_GRID;&CMPEXT;</datadep>
          <streq><left>&RUN_TASK_MAKE_GRID;</left><right>FALSE</right></streq>
        </or>
        <or>
<!--          <taskdep task="&TN_MAKE_OROG;"/> -->
          <datadep age="00:00:00:05">&EXPTDIR;/orog/&TN_MAKE_OROG;&CMPEXT;</datadep>
          <streq><left>&RUN_TASK_MAKE_OROG;</left><right>FALSE</right></streq>
        </or>
        <or>
<!--          <taskdep task="&TN_MAKE_SFC_CLIMO;"/> -->
          <datadep age="00:00:00:05">&EXPTDIR;/sfc_climo/&TN_MAKE_SFC_CLIMO;&CMPEXT;</datadep>
          <streq><left>&RUN_TASK_MAKE_SFC_CLIMO;</left><right>FALSE</right></streq>
        </or>
      </and>
    </dependency>

  </task>
</metatask>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->

<!--
************************************************************************
************************************************************************
-->
{% if do_ensemble %}
</metatask>
{% endif %}

{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if not do_ensfcst %}

<!-- beginning of spinup block  -->
{%- if do_spinup %}

{%- if do_ensemble %}
 <metatask name="run_ensemble">
  <var name="{{ ensmem_indx_name }}">{% for m in range(1, num_ens_members+1) %}{{ "%03d " % m }}{% endfor %}</var>
{%- endif %}

<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_PREP_CYC_SPINUP;{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_run_prepstart }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_PREPSTART;" "&JOBSdir;/JREGIONAL_RUN_PREPSTART"</command>

    <nodes>{{ nnodes_run_prepstart }}:ppn={{ ppn_run_prepstart }}</nodes>
    <walltime>{{ wtime_run_prepstart }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_PREP_CYC_SPINUP;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_PREP_CYC_SPINUP;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>FG_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>LBCS_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
 {%- if do_ensinit %}
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr>ensinit</cyclestr></value></envar>
 {%- else %}
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
 {%- endif %}
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>

    <dependency>
       <or>
<!-- for start spin up cycle -->
         <and>
           <or>
             {%- for h in cycl_hrs_spinstart %}
             <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
           </or>
           <taskdep task="&TN_MAKE_ICS;{{ uscore_ensmem_name }}"/>
           <or>
             {%- for h in range(0,lbcs_search_hrs) %} 
             <metataskdep metatask="&TN_MAKE_LBCS;{{ uscore_ensmem_name }}" cycle_offset="-{{ h }}:00:00"/>
             {%- endfor %}
           </or>
{%- if do_retro %}
  {%- if not do_ensemble %}
           <datadep age="00:00:10:00"><cyclestr offset="00:00:00">&FG_ROOT;/@Y@m@d@H/{{ slash_ensmem_subdir }}/fcst_fv3lam/INPUT/gfs_ctrl.nc</cyclestr></datadep>
  {%- endif %}
{%- else %}
           <timedep><cyclestr offset="&START_TIME_SPINUP;">@Y@m@d@H@M00</cyclestr></timedep>
{%- endif %}
         </and>
<!-- for continue spin up cycles  -->
         <and>
           {%- for h in cycl_hrs_spinstart %}
           <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
           {%- endfor %}
{%- if do_retro %}
           <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interv }}:00:00">&FG_ROOT;/@Y@m@d@H/{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
{%- else %}
           <timedep><cyclestr offset="&START_TIME_CONVENTIONAL_SPINUP;">@Y@m@d@H@M00</cyclestr></timedep>
           <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interv }}:00:00">&FG_ROOT;/@Y@m@d@H/{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
{%- endif %}
         </and>
       </or>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
{% if do_ensinit -%}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_FCST;_ensinit{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_run_fcst }}">

    &RSRV_FCST;
    &WALL_LIMIT_FCST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_FCST;" "&JOBSdir;/JREGIONAL_RUN_FCST"</command>

  {%- if machine in ["JET", "HERA", "LINUX"]  %}
    <cores>{{ ncores_run_fcst }}</cores>
    <native>{{ native_run_fcst }} &RRFS_RESERVE;</native>
  {%- elif machine in ["WCOSS2"]  %}
    <nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}:tpp={{ omp_num_threads_run_fcst }}</nodes>
    <native>&SCHED_NATIVE_CMD;</native>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- else %}
    <nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- endif %}
    <native>&SCHED_NATIVE_CMD;</native>
    <walltime>{{ wtime_run_fcst }}</walltime>

    <jobname>&TAG;&TN_RUN_FCST;_ensinit{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_RUN_FCST;_ensinit{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr>ensinit</cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>RESTART_HRS</name><value><cyclestr>0</cyclestr></value></envar>

    <dependency>
        <and>   
          <or>    
           {%- for h in cycl_hrs_spinstart %}
            <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
           {%- endfor %}
          </or>   
          <taskdep task="&TN_PREP_CYC_SPINUP;{{ uscore_ensmem_name }}"/>
        </and>  
    </dependency>

  </task> 
<!--
************************************************************************
************************************************************************
-->
    <task name="&TN_SAVE_RESTART;_ensinit{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_save_restart }}">

      &RSRV_DEFAULT;
      &WALL_LIMIT_SAVE_RESTART;
      <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_SAVE_RESTART;" "&JOBSdir;/JREGIONAL_SAVE_RESTART"</command>

      <nodes>{{ nnodes_save_restart }}:ppn={{ ppn_save_restart }}</nodes>
      <walltime>{{ wtime_save_restart }}</walltime>
      <nodesize>&NCORES_PER_NODE;</nodesize>
      <native>&SCHED_NATIVE_CMD;</native>

      <jobname>&TAG;&TN_SAVE_RESTART;_ensinit{{ uscore_ensmem_name }}</jobname>
      <join>&LOGDIR;/&TN_SAVE_RESTART;_ensinit{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>0</value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr>ensinit</cyclestr></value></envar>

      <dependency>
        <and>
          <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
          <datadep age="01:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam_ensinit/RESTART/coupler.res</cyclestr></datadep>
        </and>
      </dependency>

    </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_PREP_CYC_SPINUP;_ensinit{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_run_prepstart }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_PREPSTART;" "&JOBSdir;/JREGIONAL_RUN_PREPSTART"</command>

    <nodes>{{ nnodes_run_prepstart }}:ppn={{ ppn_run_prepstart }}</nodes>
    <walltime>{{ wtime_run_prepstart }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_PREP_CYC_SPINUP;_ensinit{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_PREP_CYC_SPINUP;_ensinit{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>FG_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>LBCS_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>

    <dependency>
       <taskdep task="&TN_SAVE_RESTART;_ensinit{{ uscore_ensmem_name }}"/>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_RECENTER;_spinup" cycledefs="spinupcyc" maxtries="{{ maxtries_run_recenter }}">
    &RSRV_ENKF;
    &WALL_LIMIT_RECENTER;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_RECENTER;" &JOBSdir;/JREGIONAL_RUN_RECENTER</command>

    <nodes>{{ nnodes_run_recenter }}:ppn={{ ppn_run_recenter }}</nodes>
    <walltime>{{ wtime_run_recenter }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_RUN_RECENTER;_spinup</jobname>
    <join>&LOGDIR;/&TN_RUN_RECENTER;_spinup<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>ENSCTRL_COMIN_DIR</name><value><cyclestr>&ENSCTRL_COMIN_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>ENSCTRL_COMIN_ROOT</name><value><cyclestr>&ENSCTRL_COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>

    <dependency>
      <and>
        {%- for m in range(1, num_ens_members+1) %}
          <taskdep task="&TN_PREP_CYC_SPINUP;_ensinit_mem{{ "%04d" % m }}"/>
        {%- endfor %}
        <datadep age="00:00:00:05"><cyclestr>&ENSCTRL_COMIN_BASEDIR;/@Y@m@d@H/nonvar_cldanl_spinup/nonvarcldanl_complete.txt</cyclestr></datadep>
      </and>
    </dependency>
  </task>
<!--
************************************************************************
************************************************************************
-->
{%- endif %}

{%- if not do_ensemble %}
{%- if do_dacycle %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_ANAL_GSI;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_run_anal }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_ANAL;" "&JOBSdir;/JREGIONAL_RUN_ANAL"</command>

  {%- if machine in ["JET", "HERA", "LINUX"]  %}
    <cores>{{ ncores_run_anal }}</cores>
    <native>&SCHED_NATIVE_CMD; &RRFS_RESERVE;</native>
  {%- elif machine in ["WCOSS2"]  %}
    <nodes>{{ nnodes_run_anal }}:ppn={{ ppn_run_anal }}:tpp={{ omp_num_threads_run_anal }}</nodes>
    <native>&SCHED_NATIVE_CMD;</native>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- else %}
    <nodes>{{ nnodes_run_anal }}:ppn={{ ppn_run_anal }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- endif %}
    <native>&SCHED_NATIVE_CMD;</native>
    <walltime>{{ wtime_run_anal }}</walltime>

    <jobname>&TAG;&TN_ANAL_GSI;_spinup{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_ANAL_GSI;{{ uscore_ensmem_name }}_spinup<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_ROOT</name><value><cyclestr>&COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>

    <dependency>
       <and>
         <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
         <taskdep task="&TN_PREP_CYC;_spinup{{ uscore_ensmem_name }}"/>
         {%- if use_rrfse_ens %}
         <or>
           <and>
             <or>
             {%- for h in cycl_hrs_hyb_fv3lam_ens %}
               <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
             </or>
             <or>
               <and> 
                 <or>
             {%- for h in cycl_hrs_prodstart_ens %}
               <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
                 </or>
             {% for h in range(1, num_ens_members+1) %}
             <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interv }}:00:00">&RRFSE_FG_ROOT;/@Y@m@d@H/mem{{ "%04d" % h  }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             {%- endfor %}
               </and>
               <and> 
                 <or>
             {%- for h in cycl_hrs_prodstart_ens %}
               <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
             {%- endfor %}
                 </or>
             {% for h in range(1, num_ens_members+1) %}
             <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interv }}:00:00">&RRFSE_FG_ROOT;/@Y@m@d@H/mem{{ "%04d" % h  }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             {%- endfor %}
               </and>
             </or>
           </and>
           <and>
              {%- for h in cycl_hrs_hyb_fv3lam_ens %}
                <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
              {%- endfor %}
           </and>
         </or>
         {%- endif %}
       </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_POSTANAL;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_run_postanal }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_POST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_POST;" "&JOBSdir;/JREGIONAL_RUN_POSTANAL"</command>

    <nodes>{{ nnodes_run_postanal }}:ppn={{ ppn_run_postanal }}</nodes>
    <walltime>{{ wtime_run_postanal }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_POSTANAL;_spinup{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_POSTANAL;{{ uscore_ensmem_name }}_spinup_<cyclestr>@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_ROOT</name><value><cyclestr>&COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>

    <dependency>
       <taskdep task="&TN_ANAL_GSI;_spinup{{ uscore_ensmem_name }}"/>
    </dependency>

  </task>

<!--
************************************************************************
************************************************************************
-->
{%- if do_envar_radar_ref %}
  <task name="&TN_HYBRID_RADAR_REF;_spinup" cycledefs="spinupcyc" maxtries="{{ maxtries_run_anal }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_HYBRID_RADAR_REF;" "&JOBSdir;/JREGIONAL_RUN_ANAL"</command>

  {%- if machine in ["JET", "HERA", "LINUX"]  %}
    <cores>{{ ncores_run_anal }}</cores>
    <native>&SCHED_NATIVE_CMD; &RRFS_RESERVE;</native>
  {%- elif machine in ["WCOSS2"]  %}
    <nodes>{{ nnodes_run_anal }}:ppn={{ ppn_run_anal }}:tpp={{ omp_num_threads_run_anal }}</nodes>
    <native>&SCHED_NATIVE_CMD;</native>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- else %}
    <nodes>{{ nnodes_run_anal }}:ppn={{ ppn_run_anal }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- endif %}
    <native>&SCHED_NATIVE_CMD;</native>
    <walltime>{{ wtime_run_anal }}</walltime>

    <jobname>&TAG;&TN_HYBRID_RADAR_REF;_spinup</jobname>
    <join>&LOGDIR;/&TN_HYBRID_RADAR_REF;_spinup<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_ROOT</name><value><cyclestr>&COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>30</value></envar>
    <envar><name>OB_TYPE</name><value>radardbz</value></envar>

    <dependency>
       <and>
         <taskdep task="&TN_ANAL_GSI;_spinup"/>
         <or>    
            {%- for h in cycl_hrs_hyb_fv3lam_ens %}
               <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
            {%- endfor %}
         </or>   
       </and>
    </dependency>

  </task>
{% endif -%}
<!--
************************************************************************
************************************************************************
-->

{% endif -%}

<!--
************************************************************************
************************************************************************
-->
{%- if do_refl2tten %}
  <task name="&TN_RADAR_REFL2TTEN;_spinup" cycledefs="spinupcyc"  maxtries="{{ maxtries_run_ref2tten }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_ANAL;" "&JOBSdir;/JREGIONAL_RUN_REF2TTEN"</command>

    <nodes>{{ nnodes_run_ref2tten }}:ppn={{ ppn_run_ref2tten }}</nodes>
    <walltime>{{ wtime_run_ref2tten }}</walltime>
    <memory>{{ mem_run_ref2tten }}</memory>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_RADAR_REFL2TTEN;_spinup</jobname>
    <join>&LOGDIR;/&TN_RADAR_REFL2TTEN;_spinup<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>

    <dependency>
      <and>
        <or>
          <taskdep task="&TN_PROCESS_RADAR_REF;_spinup"/>
          <taskdep task="&TN_PROCESS_BUFR;_spinup"/>
        </or>
        <taskdep task="&TN_ANAL_GSI;_spinup"/>
      </and>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if do_jedi_envar_ioda %}
  <task name="&TN_JEDI_ENVAR_IODA;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc"  maxtries="{{ maxtries_run_jedi_envar_ioda }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "jedienvar_ioda" "&JOBSdir;/JREGIONAL_JEDIENVAR_IODA"</command>

    <nodes>{{ nnodes_run_jedi_envar_ioda }}:ppn={{ ppn_run_jedi_envar_ioda }}</nodes>
    <walltime>{{ wtime_run_jedi_envar_ioda }}</walltime>
    <memory>{{ mem_run_jedi_envar_ioda }}</memory>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_JEDI_ENVAR_IODA;_spinup</jobname>
    <join>&LOGDIR;/&TN_JEDI_ENVAR_IODA;_spinup<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&TN_ANAL_GSI;_spinup"/>
      </and>
    </dependency>

  </task>
{%- endif %}

<!--
************************************************************************
************************************************************************
-->
{%- if do_nonvar_cldanal %}
  <task name="&TN_CLDANL_NONVAR;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc"  maxtries="{{ maxtries_run_nonvarcldanl }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_ANAL;" "&JOBSdir;/JREGIONAL_RUN_NONVARCLDANL"</command>

    <nodes>{{ nnodes_run_nonvarcldanl }}:ppn={{ ppn_run_nonvarcldanl }}</nodes>
    <walltime>{{ wtime_run_nonvarcldanl }}</walltime>
    <memory>{{ mem_run_nonvarcldanl }}</memory>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_CLDANL_NONVAR;_spinup{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_CLDANL_NONVAR;_spinup{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&TN_PROCESS_BUFR;_spinup"/>
        {%- if do_enkfupdate %}
        <and>
           {%- if do_enkf_radar_ref %}
             <taskdep task="&TN_ENKF_RADAR_REF;"/>
           {%- else %}
             <taskdep task="&TN_RUN_ENKFUPDT;"/>
           {%- endif %}
        </and>
        {%- elif do_envar_radar_ref %}
        <or>
          <and>
            <taskdep task="&TN_POSTANAL;_spinup{{ uscore_ensmem_name }}"/>
             {%- for h in cycl_hrs_hyb_fv3lam_ens %}
                <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
             {%- endfor %}
          </and>
          <and>
        <taskdep task="&TN_HYBRID_RADAR_REF;_spinup"/>
            <or>    
             {%- for h in cycl_hrs_hyb_fv3lam_ens %}
                <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
            </or>   
          </and>
        </or>
        {%- else %}
    <taskdep task="&TN_POSTANAL;_spinup{{ uscore_ensmem_name }}"/>
        {%- endif %}
      </and>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_FCST;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_run_fcst }}">

    &RSRV_FCST;
    &WALL_LIMIT_FCST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_FCST;" "&JOBSdir;/JREGIONAL_RUN_FCST"</command>

  {%- if machine in ["JET", "HERA", "LINUX"]  %}
    <cores>{{ ncores_run_fcst }}</cores>
    <native>{{ native_run_fcst }} &RRFS_RESERVE;</native>
  {%- elif machine in ["WCOSS2"]  %}
    <nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}:tpp={{ omp_num_threads_run_fcst }}</nodes>
    <native>&SCHED_NATIVE_CMD;</native>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- else %}
    <nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- endif %}
    <native>&SCHED_NATIVE_CMD;</native>
    <walltime>{{ wtime_run_fcst }}</walltime>

    <jobname>&TAG;&TN_RUN_FCST;_spinup{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_RUN_FCST;_spinup{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>RESTART_HRS</name><value><cyclestr>1</cyclestr></value></envar>
  
    <dependency>
      {%- if do_dacycle and do_refl2tten and do_nonvar_cldanal%}
      <and>
        <taskdep task="&TN_RADAR_REFL2TTEN;_spinup"/>
        <taskdep task="&TN_CLDANL_NONVAR;_spinup"/>
      </and>
      {%- elif do_dacycle and do_nonvar_cldanal%}
      <taskdep task="&TN_CLDANL_NONVAR;_spinup"/>
      {%- elif do_dacycle and do_refl2tten%}
      <taskdep task="&TN_RADAR_REFL2TTEN;_spinup"/>
      {%- elif do_dacycle %}
        {%- if do_envar_radar_ref %}
        <taskdep task="&TN_HYBRID_RADAR_REF;_spinup"/>
        {%- else  %}
        <taskdep task="&TN_POSTANAL;_spinup{{ uscore_ensmem_name }}"/>
        {%- endif %}
      {%- elif do_enkfupdate or do_enkf_radar_ref %}
        <and>
          <or>
          {%- for h in cycl_hrs_spinstart %}
            <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
          {%- endfor %}
          </or>
          <or>
          {%- if do_ensinit %}
          <taskdep task="&TN_RUN_RECENTER;_spinup"/>
          {%- else  %}
          <taskdep task="&TN_PREP_CYC;_spinup{{ uscore_ensmem_name }}"/>
          {%- endif %}
          </or>
        </and>
      {%- else %}
      <taskdep task="&TN_PREP_CYC;_spinup{{ uscore_ensmem_name }}"/>
      {%- endif %}
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <metatask name="&TN_SAVE_RESTART;_spinup">

    <var name="fhr"> {% for h in range(da_cycle_interv, fcst_len_hrs_spinup+da_cycle_interv, da_cycle_interv) %}{{ " %03d" % h  }}{% endfor %} </var>

    <task name="&TN_SAVE_RESTART;_spinup{{ uscore_ensmem_name }}_f#fhr#" cycledefs="spinupcyc" maxtries="{{ maxtries_save_restart }}">

      &RSRV_DEFAULT;
      &WALL_LIMIT_SAVE_RESTART;

      <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_SAVE_RESTART;" "&JOBSdir;/JREGIONAL_SAVE_RESTART"</command>

      <nodes>{{ nnodes_save_restart }}:ppn={{ ppn_save_restart }}</nodes>
      <walltime>{{ wtime_save_restart }}</walltime>
      <nodesize>&NCORES_PER_NODE;</nodesize>
      <native>&SCHED_NATIVE_CMD;</native>

      <jobname>&TAG;&TN_SAVE_RESTART;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join>&LOGDIR;/&TN_SAVE_RESTART;_spinup{{ uscore_ensmem_name }}_f#fhr#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>

      <dependency>
        <and>
          <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
          <or>
            <datadep age="01:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/RESTART/coupler.res</cyclestr></datadep>
            <datadep age="01:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr offset="#fhr#:00:00">@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          </or>
        </and>
      </dependency>

    </task>

  </metatask>

<!--
************************************************************************
************************************************************************
-->
{% if do_post_spinup %}
  <metatask name="&TN_RUN_POST;_spinup{{ uscore_ensmem_name }}">

    <var name="fhr"> {% for h in range(0, fcst_len_hrs_spinup+1) %}{{ " %03d" % h  }}{% endfor %} </var>
<!--
************************************************************************
************************************************************************
-->
    <task name="&TN_RUN_POST;_spinup{{ uscore_ensmem_name }}_f#fhr#" cycledefs="spinupcyc" maxtries="{{ maxtries_run_post }}">

      &RSRV_POST;
      &WALL_LIMIT_POST;

      <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_POST;" "&JOBSdir;/JREGIONAL_RUN_POST"</command>

      <nodes>{{ nnodes_run_post }}:ppn={{ ppn_run_post }}</nodes>
      <walltime>{{ wtime_run_post }}</walltime>
      <nodesize>&NCORES_PER_NODE;</nodesize>
      <native>&SCHED_NATIVE_CMD;</native>

      <jobname>&TAG;&TN_RUN_POST;_spinup{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join>&LOGDIR;/&TN_RUN_POST;_spinup{{ uscore_ensmem_name }}_f#fhr#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
        <datadep age="02:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/logf#fhr#</cyclestr></datadep>
      </dependency>

    </task>
<!--
************************************************************************
************************************************************************
-->
    <task name="&TN_RUN_PRDGEN;_spinup{{ uscore_ensmem_name }}_f#fhr#" cycledefs="spinupcyc" maxtries="{{ maxtries_run_prdgen }}">

      &RSRV_PRDGEN;
      &WALL_LIMIT_POST;

      <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_PRDGEN;" "&JOBSdir;/JREGIONAL_RUN_PRDGEN"</command>

      <nodes>{{ nnodes_run_prdgen }}:ppn={{ ppn_run_prdgen }}</nodes>
      <walltime>{{ wtime_run_prdgen }}</walltime>
      <memory>{{ mem_run_prdgen }}</memory>
      <nodesize>&NCORES_PER_NODE;</nodesize>
      <native>&SCHED_NATIVE_CMD;</native>

      <jobname>&TAG;&TN_RUN_PRDGEN;_spinup{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join>&LOGDIR;/&TN_RUN_PRDGEN;_spinup{{ uscore_ensmem_name }}_f#fhr#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
        <taskdep task="&TN_RUN_POST;_spinup{{ uscore_ensmem_name }}_f#fhr#"/>
      </dependency>

    </task>
<!--
************************************************************************
************************************************************************
-->
  </metatask>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->

{%- if do_ensemble %}
</metatask>
{%- endif %}

<!-- end of spinup block -->
{%- endif %}


{%- endif %}  <!-- not do_ensfcst -->

<!--
************************************************************************
************************************************************************
-->

<!-- beginning of prod block -->
{%- if do_rrfs_dev %}

{%- if do_ensemble %}
 <metatask name="run_ensemble">
  <var name="{{ ensmem_indx_name }}">{% for m in range(1, num_ens_members+1) %}{{ "%03d " % m }}{% endfor %}</var>
{%- endif %}

<!--
************************************************************************
************************************************************************
-->
{%- if tn_prep_cyc_prod %}
  <task name="&TN_PREP_CYC_PROD;{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_prepstart }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_PREPSTART;" "&JOBSdir;/JREGIONAL_RUN_PREPSTART"</command>

    <nodes>{{ nnodes_run_prepstart }}:ppn={{ ppn_run_prepstart }}</nodes>
    <walltime>{{ wtime_run_prepstart }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_PREP_CYC_PROD;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_PREP_CYC_PROD;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>FG_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>LBCS_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>

    <dependency>
     {%- if do_ensfcst %}
       <and>
         <datadep age="00:00:05:00"><cyclestr>&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/DA_OUTPUT/coupler.res</cyclestr></datadep>
         <metataskdep metatask="&TN_MAKE_LBCS;{{ uscore_ensmem_name }}"/>
       </and>
     {%- else %}
       <or>
<!-- for start product cycle -->
         <and>
           <or>
             {%- for h in cycl_hrs_prodstart %}
             <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
           </or>
{%- if do_spinup %}
{%- if do_retro %}
           <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interv }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
{% else %}
           <or>
             <and>
               <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
               <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interv }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             </and>
             <and>
               <timedep><cyclestr offset="&START_TIME_PROD;">@Y@m@d@H@M00</cyclestr></timedep>
               <or>
                 {%- for h in range(da_cycle_interv, 6+1, da_cycle_interv) %}
                 <datadep age="00:00:01:00"><cyclestr offset="-{{ h }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
                 {%- endfor %}
               </or>
             </and>
           </or>
{%- endif %}
{% else %}
{%- if do_retro %}
           <and>
             <datadep age="00:00:05:00"><cyclestr>&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/ics/gfs_data.tile7.halo0.nc</cyclestr></datadep>
             <or>
             {%- for h in range(0, extrn_mdl_ics_offset_hrs+1) %}
             <datadep age="00:00:05:00"><cyclestr offset="-{{ h }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/lbcs/gfs_bndy.tile7.{{ "%03d" % boundary_len_hrs }}.nc</cyclestr></datadep>
             {%- endfor %}
             </or>
           </and>
{% else %}
           <and>
             <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
             <taskdep task="&TN_MAKE_ICS;{{ uscore_ensmem_name }}"/>
             <or>
               <metataskdep metatask="&TN_MAKE_LBCS;{{ uscore_ensmem_name }}"/>
               <metataskdep metatask="&TN_MAKE_LBCS;{{ uscore_ensmem_name }}" cycle_offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00"/>
             </or>
           </and>
{%- endif %}
{%- endif %}
         </and>
<!-- for continue product cycles  -->
         <and>
           {%- for h in cycl_hrs_prodstart %}
           <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
           {%- endfor %}
{%- if do_retro %}
           <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interv }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
{% else %}
           <or>
             <and>
               <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
               <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interv }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             </and>
             <and>
               <timedep><cyclestr offset="&START_TIME_LATE_ANALYSIS;">@Y@m@d@H@M00</cyclestr></timedep>
               <or>
                 {%- for h in range(da_cycle_interv+da_cycle_interv, 6+1, da_cycle_interv) %}
                 <datadep age="00:00:01:00"><cyclestr offset="-{{ h }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
                 {%- endfor %}
               </or>
             </and>
           </or>
{%- endif %}
         </and>
       </or>
{%- endif %}
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->

{%- if do_ensemble %}
</metatask>
{%- endif %}
<!-- end of prod block -->
{%- endif %}

{%- if not do_ensfcst %}
{%- if do_gsiobserver %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_CALC_ENSMEAN;" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_prepstart }}">

    &RSRV_ENKF;
    &WALL_LIMIT_RECENTER;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_PREPSTART;" "&JOBSdir;/JREGIONAL_CALC_ENSMEAN"</command>

    <nodes>{{ nnodes_run_recenter }}:ppn={{ ppn_run_recenter }}</nodes>
    <walltime>{{ wtime_run_recenter }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_CALC_ENSMEAN;</jobname>
    <join>&LOGDIR;/&TN_CALC_ENSMEAN;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>

    <dependency>
         <and>
         {%- for m in range(1, num_ens_members+1) %}
         <taskdep task="&TN_PREP_CYC_PROD;_mem{{ "%04d" % m }}"/>
         {%- endfor %}
         </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_OBSERVER_GSI_ENSMEAN;" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_anal }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_ANAL;" "&JOBSdir;/JREGIONAL_RUN_ANAL"</command>

  {%- if machine in ["JET", "HERA", "LINUX"]  %}
    <cores>{{ ncores_run_anal }}</cores>
    <native>&SCHED_NATIVE_CMD; &RRFS_RESERVE;</native>
  {%- elif machine in ["WCOSS2"]  %}
    <nodes>{{ nnodes_run_anal }}:ppn={{ ppn_run_anal }}:tpp={{ omp_num_threads_run_anal }}</nodes>
    <native>&SCHED_NATIVE_CMD;</native>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- else %}
    <nodes>{{ nnodes_run_anal }}:ppn={{ ppn_run_anal }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- endif %}
    <native>&SCHED_NATIVE_CMD;</native>
    <walltime>{{ wtime_run_anal }}</walltime>

    <jobname>&TAG;&TN_OBSERVER_GSI_ENSMEAN;</jobname>
    <join>&LOGDIR;/&TN_OBSERVER_GSI_ENSMEAN;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_ROOT</name><value><cyclestr>&COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>OBSERVER</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEAN</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>

    <dependency>
       <and>
         <taskdep task="&TN_CALC_ENSMEAN;"/>
         {%- if do_enkf_radar_ref %}
         <taskdep task="&TN_PROCESS_RADAR_REF;_prod"/>
         {%- endif %}
         {% if machine in ["JET", "HERA"] -%}
         <datadep age="05:00"><cyclestr>&OBSPATH;/@Y@m@d@H.rap.t@Hz.prepbufr.tm00</cyclestr></datadep>
         {% else -%}
     <datadep age="05:00"><cyclestr>&OBSPATH;/rap.@Y@m@d/rap.t@Hz.prepbufr.tm00</cyclestr></datadep>
         {% endif -%}
       </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
 {%- if do_ensemble %}
 <metatask name="run_ensemble_observer">
   <var name="{{ ensmem_indx_name }}">{% for m in range(1, num_ens_members+1) %}{{ "%03d " % m }}{% endfor %}</var>
 {%- endif %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_OBSERVER_GSI;{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_anal }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_ANAL;" "&JOBSdir;/JREGIONAL_RUN_ANAL"</command>

  {%- if machine in ["JET", "HERA", "LINUX"]  %}
    <cores>{{ ncores_run_anal }}</cores>
    <native>&SCHED_NATIVE_CMD; &RRFS_RESERVE;</native>
  {%- elif machine in ["WCOSS2"]  %}
    <nodes>{{ nnodes_run_anal }}:ppn={{ ppn_run_anal }}:tpp={{ omp_num_threads_run_anal }}</nodes>
    <native>&SCHED_NATIVE_CMD;</native>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- else %}
    <nodes>{{ nnodes_run_anal }}:ppn={{ ppn_run_anal }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- endif %}
    <native>&SCHED_NATIVE_CMD;</native>
    <walltime>{{ wtime_run_anal }}</walltime>

    <jobname>&TAG;&TN_OBSERVER_GSI;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_OBSERVER_GSI;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_ROOT</name><value><cyclestr>&COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>OBSERVER</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>

    <dependency>
       <and>
         <taskdep task="&TN_OBSERVER_GSI_ENSMEAN;"/>
       </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->

{%- if do_ensemble %}
  </metatask>
{%- endif %}
<!-- do gsi observer -->
{%- endif %}

<!--
************************************************************************
************************************************************************
-->
{%- if do_enkfupdate %}
  <task name="&TN_RUN_ENKFUPDT;" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_enkf }}">
    &RSRV_ENKF;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_ENKFUPDT;" &JOBSdir;/JREGIONAL_RUN_ENKF</command>

    <nodes>{{ nnodes_run_enkf }}:ppn={{ ppn_run_enkf }}</nodes>
    <walltime>{{ wtime_run_enkf }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_RUN_ENKFUPDT;</jobname>
    <join>&LOGDIR;/&TN_RUN_ENKFUPDT;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>OB_TYPE</name><value>conv</value></envar>

    <dependency>
        <metataskdep metatask="run_ensemble_observer"/>
    </dependency>
  </task>

{%- endif %}

<!--
************************************************************************
************************************************************************
-->
{%- if do_enkf_radar_ref %}
  <task name="&TN_ENKF_RADAR_REF;" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_enkf }}">
    &RSRV_ENKF;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_ENKF_RADAR_REF;" &JOBSdir;/JREGIONAL_RUN_ENKF</command>

    <nodes>{{ nnodes_run_enkf }}:ppn={{ ppn_run_enkf }}</nodes>
    <walltime>{{ wtime_run_enkf }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_ENKF_RADAR_REF;</jobname>
    <join>&LOGDIR;/&TN_ENKF_RADAR_REF;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>OB_TYPE</name><value>radardbz</value></envar>

    <dependency>
      <and>
        <taskdep task="&TN_RUN_ENKFUPDT;"/>
        {%- if do_retro %}
        <and> 
        {%- for m in range(1, num_ens_members+1) %}
          <datadep age="00:00:00:01"><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H/mem{{ "%04d" % m }}/observer_gsi/diag_conv_rw_ges.@Y@m@d@H.nc4</cyclestr></datadep>
        {%- endfor %}
        </and> 
        {%- endif %}
      </and>
    </dependency>
  </task>

{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if do_recenter %}
  <task name="&TN_RUN_RECENTER;" cycledefs="recentercyc" maxtries="{{ maxtries_run_recenter }}">
    &RSRV_ENKF;
    &WALL_LIMIT_RECENTER;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_RECENTER;" &JOBSdir;/JREGIONAL_RUN_RECENTER</command>

    <nodes>{{ nnodes_run_recenter }}:ppn={{ ppn_run_recenter }}</nodes>
    <walltime>{{ wtime_run_recenter }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_RUN_RECENTER;</jobname>
    <join>&LOGDIR;/&TN_RUN_RECENTER;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>ENSCTRL_CYCLE_DIR</name><value><cyclestr>&ENSCTRL_COMIN_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>ENSCTRL_CYCLE_ROOT</name><value><cyclestr>&ENSCTRL_COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>

    <dependency>
      <and>
        {%- if do_nonvar_cldanal %}
        <and>
        {%- for m in range(1, num_ens_members+1) %}
          <taskdep task="&TN_CLDANL_NONVAR;_prod_mem{{ "%04d" % m }}"/>
        {%- endfor %}
        </and>
        {%- elif do_enkf_radar_ref %}
        <taskdep task="&TN_ENKF_RADAR_REF;"/>
        {%- elif do_enkfupdate %}
        <taskdep task="&TN_RUN_ENKFUPDT;"/>
        {%- endif %}
        <or>
        <datadep age="00:00:00:05"><cyclestr>&ENSCTRL_COMIN_BASEDIR;/@Y@m@d@H/nonvar_cldanl/nonvarcldanl_complete.txt</cyclestr></datadep>
        <datadep age="00:00:00:05"><cyclestr>&ENSCTRL_COMIN_BASEDIR;/@Y@m@d@H/nonvar_cldanl_spinup/nonvarcldanl_complete.txt</cyclestr></datadep>
        </or>
      </and>
    </dependency>
  </task>

{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{% if do_rrfs_dev %}

{% if do_ensemble %}
 <metatask name="run_ensemble">
  <var name="{{ ensmem_indx_name }}">{% for m in range(1, num_ens_members+1) %}{{ "%03d " % m }}{% endfor %}</var>
{%- endif %}

{%- if do_dacycle %}

<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_ANAL_GSI;_prod{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_anal }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_ANAL;" "&JOBSdir;/JREGIONAL_RUN_ANAL"</command>

  {%- if machine in ["JET", "HERA", "LINUX"]  %}
    <cores>{{ ncores_run_anal }}</cores>
    <native>&SCHED_NATIVE_CMD; &RRFS_RESERVE;</native>
  {%- elif machine in ["WCOSS2"]  %}
    <nodes>{{ nnodes_run_anal }}:ppn={{ ppn_run_anal }}:tpp={{ omp_num_threads_run_anal }}</nodes>
    <native>&SCHED_NATIVE_CMD;</native>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- else %}
    <nodes>{{ nnodes_run_anal }}:ppn={{ ppn_run_anal }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- endif %}
    <native>&SCHED_NATIVE_CMD;</native>
    <walltime>{{ wtime_run_anal }}</walltime>

    <jobname>&TAG;&TN_ANAL_GSI;_prod{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_ANAL_GSI;{{ uscore_ensmem_name }}_prod_<cyclestr>@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_ROOT</name><value><cyclestr>&COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>

    <dependency>
       <and>
         <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
         <taskdep task="&TN_PREP_CYC;_prod{{ uscore_ensmem_name }}"/>
         {%- if use_rrfse_ens %}
         <or>
           <and>
             <or>
             {%- for h in cycl_hrs_hyb_fv3lam_ens %}
               <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
             </or>
           <or>
           {%- if do_spinup %}
            <and> 
             <or>
             {%- for h in cycl_hrs_prodstart_ens %}
               <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
             </or>
             {% for h in range(1, num_ens_members+1) %}
             <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interv }}:00:00">&RRFSE_FG_ROOT;/@Y@m@d@H/mem{{ "%04d" % h  }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             {%- endfor %}
            </and>
            <and> 
             <or>
             {%- for h in cycl_hrs_prodstart_ens %}
               <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
             {%- endfor %}
             </or>
             {% for h in range(1, num_ens_members+1) %}
             <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interv }}:00:00">&RRFSE_FG_ROOT;/@Y@m@d@H/mem{{ "%04d" % h  }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             {%- endfor %}
            </and>
           {%- else %} 
            <and>
             {% for h in range(1, num_ens_members+1) %}
             <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interv }}:00:00">&RRFSE_FG_ROOT;/@Y@m@d@H/mem{{ "%04d" % h  }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             {%- endfor %}
            </and>
           {%- endif %} 
           </or>
           </and>
           <and>
              {%- for h in cycl_hrs_hyb_fv3lam_ens %}
                <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
              {%- endfor %}
           </and>
         </or>
         {%- endif %}
       </and>
    </dependency>

  </task>

<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_POSTANAL;_prod{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_postanal }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_POST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_POST;" "&JOBSdir;/JREGIONAL_RUN_POSTANAL"</command>

    <nodes>{{ nnodes_run_postanal }}:ppn={{ ppn_run_postanal }}</nodes>
    <walltime>{{ wtime_run_postanal }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_POSTANAL;_prod{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_POSTANAL;{{ uscore_ensmem_name }}_prod<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_ROOT</name><value><cyclestr>&COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>

    <dependency>
       <taskdep task="&TN_ANAL_GSI;_prod{{ uscore_ensmem_name }}"/>
    </dependency>

  </task>

<!--
************************************************************************
************************************************************************
-->
{%- if do_envar_radar_ref %}
  <task name="&TN_HYBRID_RADAR_REF;_prod" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_anal }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_HYBRID_RADAR_REF;" "&JOBSdir;/JREGIONAL_RUN_ANAL"</command>

  {%- if machine in ["JET", "HERA", "LINUX"]  %}
    <cores>{{ ncores_run_anal }}</cores>
    <native>&SCHED_NATIVE_CMD; &RRFS_RESERVE;</native>
  {%- elif machine in ["WCOSS2"]  %}
    <nodes>{{ nnodes_run_anal }}:ppn={{ ppn_run_anal }}:tpp={{ omp_num_threads_run_anal }}</nodes>
    <native>&SCHED_NATIVE_CMD;</native>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- else %}
    <nodes>{{ nnodes_run_anal }}:ppn={{ ppn_run_anal }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- endif %}
    <native>&SCHED_NATIVE_CMD;</native>
    <walltime>{{ wtime_run_anal }}</walltime>

    <jobname>&TAG;&TN_HYBRID_RADAR_REF;_prod</jobname>
    <join>&LOGDIR;/&TN_HYBRID_RADAR_REF;_prod_<cyclestr>@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_ROOT</name><value><cyclestr>&COMIN_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>30</value></envar>
    <envar><name>OB_TYPE</name><value>radardbz</value></envar>

    <dependency>
       <and>
         <taskdep task="&TN_ANAL_GSI;_prod"/>
         <or>    
            {%- for h in cycl_hrs_hyb_fv3lam_ens %}
               <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
            {%- endfor %}
         </or>   
       </and>
    </dependency>

  </task>
{% endif -%}

<!--
************************************************************************
************************************************************************
-->

{% endif -%}

<!--
************************************************************************
************************************************************************
-->
{%- if do_refl2tten %}
  <task name="&TN_RADAR_REFL2TTEN;_prod" cycledefs="prodcyc,prodcyc_long"  maxtries="{{ maxtries_run_ref2tten }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_ANAL;" "&JOBSdir;/JREGIONAL_REFL2TTEN"</command>

    <nodes>{{ nnodes_run_ref2tten }}:ppn={{ ppn_run_ref2tten }}</nodes>
    <walltime>{{ wtime_run_ref2tten }}</walltime>
    <memory>{{ mem_run_ref2tten }}</memory>
    <nodesize>&NCORES_PER_NODE;</nodesize>

    <jobname>&TAG;&TN_RADAR_REFL2TTEN;_prod</jobname>
    <join>&LOGDIR;/&TN_RADAR_REFL2TTEN;_prod_<cyclestr>@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>

    <dependency>
      <and>
        <or>
          <taskdep task="&TN_PROCESS_RADAR_REF;_prod"/>
          <taskdep task="&TN_PROCESS_BUFR;_prod"/>
        </or>
        <taskdep task="&TN_ANAL_GSI;_prod"/>
      </and>
    </dependency>

  </task>

{%- endif %}

<!--
************************************************************************
************************************************************************
-->
{%- if do_jedi_envar_ioda %}
  <task name="&TN_JEDI_ENVAR_IODA;_prod{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long"  maxtries="{{ maxtries_run_jedi_envar_ioda }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "jedienvar_ioda" "&JOBSdir;/JREGIONAL_JEDIENVAR_IODA"</command>

    <nodes>{{ nnodes_run_jedi_envar_ioda }}:ppn={{ ppn_run_jedi_envar_ioda }}</nodes>
    <walltime>{{ wtime_run_jedi_envar_ioda }}</walltime>
    <memory>{{ mem_run_jedi_envar_ioda }}</memory>
    <nodesize>&NCORES_PER_NODE;</nodesize>

    <jobname>&TAG;&TN_JEDI_ENVAR_IODA;_prod</jobname>
    <join>&LOGDIR;/&TN_JEDI_ENVAR_IODA;_prod_<cyclestr>@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&TN_ANAL_GSI;_prod"/>
      </and>
    </dependency>

  </task>

{%- endif %}

<!--
************************************************************************
************************************************************************
-->
{%- if do_nonvar_cldanal %}
  <task name="&TN_CLDANL_NONVAR;_prod{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long"  maxtries="{{ maxtries_run_nonvarcldanl }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANAL;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_ANAL;" "&JOBSdir;/JREGIONAL_RUN_NONVARCLDANL"</command>

    <nodes>{{ nnodes_run_nonvarcldanl }}:ppn={{ ppn_run_nonvarcldanl }}</nodes>
    <walltime>{{ wtime_run_nonvarcldanl }}</walltime>
    <memory>{{ mem_run_nonvarcldanl }}</memory>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>

    <jobname>&TAG;&TN_CLDANL_NONVAR;_prod{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_CLDANL_NONVAR;_prod{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&TN_PROCESS_BUFR;_prod"/>
        {%- if do_enkfupdate %}
        <and>
           {%- if do_enkf_radar_ref %}
             <taskdep task="&TN_ENKF_RADAR_REF;"/>
           {%- else %}
             <taskdep task="&TN_RUN_ENKFUPDT;"/>
           {%- endif %}
        </and>
        {%- elif do_envar_radar_ref %}
        <or>
          <and>
            <taskdep task="&TN_POSTANAL;_prod{{ uscore_ensmem_name }}"/>
             {%- for h in cycl_hrs_hyb_fv3lam_ens %}
                <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
             {%- endfor %}
          </and>
          <and>
        <taskdep task="&TN_HYBRID_RADAR_REF;_prod"/>
            <or>    
             {%- for h in cycl_hrs_hyb_fv3lam_ens %}
                <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
            </or>   
          </and>
        </or>
        {%- else %}
    <taskdep task="&TN_POSTANAL;_prod{{ uscore_ensmem_name }}"/>
        {%- endif %}
      </and>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->

{%- if do_ensemble %}
 </metatask>
{%- endif %}
<!-- do_rrfs_dev -->
{%- endif %}
<!-- do_ensfcst -->
{%- endif %}

<!--
************************************************************************
************************************************************************
-->
{%- if do_save_input and do_ensemble %}
 <metatask name="save_ensda_output">
  <var name="{{ ensmem_indx_name }}">
    {%- for m in range(1, num_ens_members_fcst+1) -%}{%- set fmtstr=" %03d" -%}{{- fmtstr%m -}}{%- endfor %} </var>

  <task name="&TN_SAVE_INPUT;_prod{{ uscore_ensmem_name }}" cycledefs="saveinputcyc" maxtries="{{ maxtries_save_input }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_SAVE_RESTART;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_SAVE_RESTART;" "&JOBSdir;/JREGIONAL_SAVE_INPUT"</command>

    <nodes>{{ nnodes_save_restart }}:ppn={{ ppn_save_restart }}</nodes>
    <walltime>{{ wtime_save_restart }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>

    <jobname>&TAG;&TN_SAVE_INPUT;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_SAVE_INPUT;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>

    <dependency>
       {%- if do_recenter %}
        <or>
         <and>
          <or>
          {%- for h in cycl_hrs_recenter %}
          <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
          {%- endfor %}
          </or>
          <datadep age="01:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H/recenter/fcst_fv3lam/INPUT/recenter_complete.txt</cyclestr></datadep>
         </and>
         <and>
          {%- for h in cycl_hrs_recenter %}
          <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
          {%- endfor %}
          <taskdep task="&TN_CLDANL_NONVAR;_prod{{ uscore_ensmem_name }}"/>
         </and>
        </or>
        {%- elif do_nonvar_cldanal%}
        <taskdep task="&TN_CLDANL_NONVAR;_prod{{ uscore_ensmem_name }}"/>
        {%- elif do_enkf_radar_ref %}
        <taskdep task="&TN_ENKF_RADAR_REF;"/>
        {%- elif do_enkfupdate %}
        <taskdep task="&TN_RUN_ENKFUPDT;"/>
       {%- endif %}
    </dependency>

  </task>
 </metatask>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{% if do_ensemble %}
 <metatask name="run_ensemble">
  <var name="{{ ensmem_indx_name }}">{% for m in range(1, num_ens_members+1) %}{{ "%03d " % m }}{% endfor %}</var>
{%- endif %}

<!--
************************************************************************
************************************************************************
-->
{%- if run_task_run_fcst %}
  <task name="&TN_RUN_FCST;_prod{{ uscore_ensmem_name }}" cycledefs="prodcyc" maxtries="{{ maxtries_run_fcst }}">

    &RSRV_FCST;
    &WALL_LIMIT_FCST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_FCST;" "&JOBSdir;/JREGIONAL_RUN_FCST"</command>

  {%- if machine in ["JET", "HERA", "LINUX"]  %}
    <cores>{{ ncores_run_fcst }}</cores>
    <native>{{ native_run_fcst }} &RRFS_RESERVE;</native>
  {%- elif machine in ["WCOSS2"]  %}
    <nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}:tpp={{ omp_num_threads_run_fcst }}</nodes>
    <native>&SCHED_NATIVE_CMD;</native>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- else %}
    <nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- endif %}
    <native>&SCHED_NATIVE_CMD;</native>
    <walltime>{{ wtime_run_fcst }}</walltime>

    <jobname>&TAG;&TN_RUN_FCST;_prod{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_RUN_FCST;_prod{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>RESTART_HRS</name><value><cyclestr>{{ restart_interval }}</cyclestr></value></envar>
  
    <dependency>
      {%- if do_ensfcst %}
      <taskdep task="&TN_PREP_CYC;_prod{{ uscore_ensmem_name }}"/>
      {%- elif do_dacycle and do_refl2tten and do_nonvar_cldanal%}
      <and>
        <taskdep task="&TN_RADAR_REFL2TTEN;_prod"/>
        <taskdep task="&TN_CLDANL_NONVAR;_prod"/>
      </and>
      {%- elif do_dacycle and do_nonvar_cldanal%}
      <taskdep task="&TN_CLDANL_NONVAR;_prod"/>
      {%- elif do_dacycle and do_refl2tten%}
      <taskdep task="&TN_RADAR_REFL2TTEN;_prod"/>
      {%- elif do_dacycle %}
        {%- if do_envar_radar_ref %}
        <taskdep task="&TN_HYBRID_RADAR_REF;_prod"/>
        {%- else  %}
        <taskdep task="&TN_POSTANAL;_prod"/>
        {%- endif %}
      {%- elif do_enkfupdate or do_enkf_radar_ref %}
        {%- if do_recenter %}
        <or>
         <and>
          <or>
          {%- for h in cycl_hrs_recenter %}
          <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
          {%- endfor %}
          </or>
          <datadep age="01:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H/recenter/fcst_fv3lam/INPUT/recenter_complete.txt</cyclestr></datadep>
         </and>
         <and>
          {%- for h in cycl_hrs_recenter %}
          <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
          {%- endfor %}
          <taskdep task="&TN_CLDANL_NONVAR;_prod{{ uscore_ensmem_name }}"/>
         </and>
        </or>
        {%- elif do_nonvar_cldanal%}
        <taskdep task="&TN_CLDANL_NONVAR;_prod{{ uscore_ensmem_name }}"/>
        {%- elif do_enkf_radar_ref %}
        <taskdep task="&TN_ENKF_RADAR_REF;"/>
        {%- else %}
        <taskdep task="&TN_RUN_ENKFUPDT;"/>
       {%- endif %}
      {%- else %}
      {%- if do_rrfs_dev %}
         <taskdep task="&TN_PREP_CYC;_prod{{ uscore_ensmem_name }}"/>
      {%- else %}
         <and>
           <taskdep task="&TN_MAKE_ICS;{{ uscore_ensmem_name }}"/>
           <metataskdep metatask="&TN_MAKE_LBCS;{{ uscore_ensmem_name }}"/>

           <!-- AQM dependency -->
           {%- if run_task_nexus_emission %}
                   <taskdep task="&TN_NEXUS_POST_SPLIT;"/>
           {%- endif %}
           {%- if run_task_fire_emission %}
                   <taskdep task="&TN_FIRE_EMISSION;"/>
           {%- endif %}
           {%- if run_task_point_source %}
                   <taskdep task="&TN_POINT_SOURCE;"/>
           {%- endif %}
           {%- if run_task_aqm_ics %}
                   <or>
                     <taskdep task="&TN_AQM_ICS;"/>
           {%- if not coldstart %}
                     <and>
                       <not><cycleexistdep cycle_offset="-{{- cycl_freq -}}"/></not>
                       <taskdep task="&TN_AQM_EXTRN_ICS;"/>
                     </and>
           {%- else %}
                     <not><cycleexistdep cycle_offset="-{{- cycl_freq -}}"/></not>
           {%- endif %}
                   </or>
           {%- endif %}
           {%- if run_task_aqm_lbcs %}
                   <taskdep task="&TN_AQM_LBCS;"/>
           {%- endif %}
           <!-- end AQM dependency -->

         </and>
      {%- endif %}

      {%- endif %}
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if do_rrfs_dev and wtime_run_fcst_long %}
  <task name="&TN_RUN_FCST;_prod_long{{ uscore_ensmem_name }}" cycledefs="prodcyc_long" maxtries="{{ maxtries_run_fcst }}">

    &RSRV_FCST;
    &WALL_LIMIT_FCST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_FCST;" "&JOBSdir;/JREGIONAL_RUN_FCST"</command>

  {%- if machine in ["JET", "HERA", "LINUX"]  %}
    <cores>{{ ncores_run_fcst }}</cores>
    <native>{{ native_run_fcst }} &RRFS_RESERVE;</native>
  {%- elif machine in ["WCOSS2"]  %}
    <nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}:tpp={{ omp_num_threads_run_fcst }}</nodes>
    <native>&SCHED_NATIVE_CMD;</native>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- else %}
    <nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- endif %}
    <native>&SCHED_NATIVE_CMD;</native>
    <walltime>{{ wtime_run_fcst_long }}</walltime>

    <jobname>&TAG;&TN_RUN_FCST;_prod{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_RUN_FCST;_prod{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>RESTART_HRS</name><value><cyclestr>{{ restart_interval_long }}</cyclestr></value></envar>
  
    <dependency>
      {%- if do_dacycle and do_refl2tten and do_nonvar_cldanal%}
      <and>
        <taskdep task="&TN_RADAR_REFL2TTEN;_prod"/>
        <taskdep task="&TN_CLDANL_NONVAR;_prod"/>
      </and>
      {%- elif do_dacycle and do_nonvar_cldanal%}
      <taskdep task="&TN_CLDANL_NONVAR;_prod"/>
      {%- elif do_dacycle and do_refl2tten%}
      <taskdep task="&TN_RADAR_REFL2TTEN;_prod"/>
      {%- elif do_dacycle %}
        {%- if do_envar_radar_ref %}
        <taskdep task="&TN_HYBRID_RADAR_REF;_prod"/>
        {%- else  %}
        <taskdep task="&TN_POSTANAL;_prod"/>
        {%- endif %}
      {%- elif do_enkfupdate or do_enkf_radar_ref %}
        {%- if do_recenter %}
        <or>
         <and>
          <or>
          {%- for h in cycl_hrs_recenter %}
          <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
          {%- endfor %}
          </or>
          <datadep age="01:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H/recenter/fcst_fv3lam/INPUT/recenter_complete.txt</cyclestr></datadep>
         </and>
         <and>
          {%- for h in cycl_hrs_recenter %}
          <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
          {%- endfor %}
          <taskdep task="&TN_CLDANL_NONVAR;_prod{{ uscore_ensmem_name }}"/>
         </and>
        </or>
        {%- elif do_nonvar_cldanal%}
        <taskdep task="&TN_CLDANL_NONVAR;_prod{{ uscore_ensmem_name }}"/>
        {%- elif do_enkf_radar_ref %}
        <taskdep task="&TN_ENKF_RADAR_REF;"/>
        {%- else %}
        <taskdep task="&TN_RUN_ENKFUPDT;"/>
       {%- endif %}
      {%- else %}
      <taskdep task="&TN_PREP_CYC;_prod{{ uscore_ensmem_name }}"/>
      {%- endif %}
    </dependency>
  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if not do_ensfcst %}
{%- if not is_rtma %}
{%- if do_rrfs_dev %}
{%- if tn_save_restart %}
  <metatask name="&TN_SAVE_RESTART;_prod">

    <var name="fhr"> {{ restart_interval }} </var>

    <task name="&TN_SAVE_RESTART;_prod{{ uscore_ensmem_name }}_f#fhr#" cycledefs="prodcyc" maxtries="{{ maxtries_save_restart }}">

      &RSRV_DEFAULT;
      &WALL_LIMIT_SAVE_RESTART;

      <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_SAVE_RESTART;" "&JOBSdir;/JREGIONAL_SAVE_RESTART"</command>

      <nodes>{{ nnodes_save_restart }}:ppn={{ ppn_save_restart }}</nodes>
      <walltime>{{ wtime_save_restart }}</walltime>
      <nodesize>&NCORES_PER_NODE;</nodesize>

      <jobname>&TAG;&TN_SAVE_RESTART;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join>&LOGDIR;/&TN_SAVE_RESTART;{{ uscore_ensmem_name }}_f#fhr#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>

      <dependency>
        <and>
          <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
          <or>
            <datadep age="01:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/coupler.res</cyclestr></datadep>
            <datadep age="01:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr offset="#fhr#:00:00">@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          </or>
        </and>
      </dependency>

    </task>

  </metatask>

  <metatask name="&TN_SAVE_RESTART;_prod_long">

    <var name="fhr"> {{ restart_interval_long }} </var>

    <task name="&TN_SAVE_RESTART;_prod_long{{ uscore_ensmem_name }}_f#fhr#" cycledefs="prodcyc_long" maxtries="{{ maxtries_save_restart }}">

      &RSRV_DEFAULT;
      &WALL_LIMIT_SAVE_RESTART;

      <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_SAVE_RESTART;" "&JOBSdir;/JREGIONAL_SAVE_RESTART"</command>

      <nodes>{{ nnodes_save_restart }}:ppn={{ ppn_save_restart }}</nodes>
      <walltime>{{ wtime_save_restart }}</walltime>
      <nodesize>&NCORES_PER_NODE;</nodesize>

      <jobname>&TAG;&TN_SAVE_RESTART;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join>&LOGDIR;/&TN_SAVE_RESTART;{{ uscore_ensmem_name }}_f#fhr#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>

      <dependency>
        <and>
          <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
          <or>
            <datadep age="01:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/coupler.res</cyclestr></datadep>
            <datadep age="01:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr offset="#fhr#:00:00">@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          </or>
        </and>
      </dependency>

    </task>

  </metatask>
{%- endif %}
{%- endif %}
{%- endif %}
{%- endif %}
<!--
************************************************************************
************************************************************************
-->

{%- if do_post_prod %}
<!--
************************************************************************
************************************************************************
-->
  <metatask name="&TN_RUN_POST;{{ uscore_ensmem_name }}">

    <var name="fullfhr"> {% for h in range(0, postproc_len_hrs+1) %}{{ " %03d" % h  }}{% endfor %} </var>
    <metatask>
{% if nsout_min > 0 %}
       <var name="fhr"> {% for h in range(0, 60, nsout_min) %}{{ " #fullfhr#-%02d-00 " % h  }}{% endfor %} </var>
{%- else %}
       <var name="fhr"> #fullfhr# </var>
{%- endif %}

    <task name="&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr#" cycledefs="prodcyc" maxtries="{{ maxtries_run_post }}">

      &RSRV_POST;
      &WALL_LIMIT_POST;

      <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_POST;" "&JOBSdir;/JREGIONAL_RUN_POST"</command>

      <nodes>{{ nnodes_run_post }}:ppn={{ ppn_run_post }}</nodes>
      <walltime>{{ wtime_run_post }}</walltime>
      <nodesize>&NCORES_PER_NODE;</nodesize>
      <native>&SCHED_NATIVE_CMD;</native>

      <jobname>&TAG;&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join>&LOGDIR;/&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
          <datadep age="01:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/logf#fhr#</cyclestr></datadep>
      </dependency>

    </task>
  </metatask>
  </metatask>
<!--
************************************************************************
************************************************************************
-->
  <metatask name="&TN_RUN_POST;{{ uscore_ensmem_name }}_long">

    <var name="fullfhr"> {% for h in range(0, postproc_long_len_hrs+1) %}{{ " %03d" % h  }}{% endfor %} </var>
    <metatask>
{% if nsout_min > 0 %}
       <var name="fhr"> {% for h in range(0, 60, nsout_min) %}{{ " #fullfhr#-%02d-00 " % h  }}{% endfor %} </var>
{%- else %}
       <var name="fhr"> #fullfhr# </var>
{%- endif %}

    <task name="&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr#_long" cycledefs="prodcyc_long" maxtries="{{ maxtries_run_post }}">

      &RSRV_POST;
      &WALL_LIMIT_POST;

      <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_POST;" "&JOBSdir;/JREGIONAL_RUN_POST"</command>

      <nodes>{{ nnodes_run_post }}:ppn={{ ppn_run_post }}</nodes>
      <walltime>{{ wtime_run_post }}</walltime>
      <nodesize>&NCORES_PER_NODE;</nodesize>
      <native>&SCHED_NATIVE_CMD;</native>

      <jobname>&TAG;&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join>&LOGDIR;/&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
         <datadep age="01:30"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/logf#fhr#</cyclestr></datadep>
      </dependency>

    </task>
  </metatask>
  </metatask>
<!--
************************************************************************
************************************************************************
-->
<metatask name="&TN_RUN_PRDGEN;{{ uscore_ensmem_name }}">

    <var name="fhr"> {% for h in range(0, postproc_len_hrs+1) %}{{ " %03d" % h  }}{% endfor %} </var>

    <task name="&TN_RUN_PRDGEN;{{ uscore_ensmem_name }}_f#fhr#" cycledefs="prodcyc" maxtries="{{ maxtries_run_prdgen }}">

      &RSRV_PRDGEN;
      &WALL_LIMIT_POST;

      <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_PRDGEN;" "&JOBSdir;/JREGIONAL_RUN_PRDGEN"</command>

      <nodes>{{ nnodes_run_prdgen }}:ppn={{ ppn_run_prdgen }}</nodes>
      <walltime>{{ wtime_run_prdgen }}</walltime>
      <memory>{{ mem_run_prdgen }}</memory>
      <nodesize>&NCORES_PER_NODE;</nodesize>
      <native>&SCHED_NATIVE_CMD;</native>

      <jobname>&TAG;&TN_RUN_PRDGEN;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join>&LOGDIR;/&TN_RUN_PRDGEN;{{ uscore_ensmem_name }}_f#fhr#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
        <taskdep task="&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr#"/>
      </dependency>

    </task>
  </metatask>

<metatask name="&TN_RUN_PRDGEN;{{ uscore_ensmem_name }}_long">
    <var name="fhr"> {% for h in range(0, postproc_long_len_hrs+1) %}{{ " %03d" % h  }}{% endfor %} </var>
    <task name="&TN_RUN_PRDGEN;{{ uscore_ensmem_name }}_f#fhr#_long" cycledefs="prodcyc_long" maxtries="{{ maxtries_run_prdgen }}">

      &RSRV_PRDGEN;
      &WALL_LIMIT_POST;

      <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_PRDGEN;" "&JOBSdir;/JREGIONAL_RUN_PRDGEN"</command>

      <nodes>{{ nnodes_run_prdgen }}:ppn={{ ppn_run_prdgen }}</nodes>
      <walltime>{{ wtime_run_prdgen }}</walltime>
      <memory>{{ mem_run_prdgen }}</memory>
      <nodesize>&NCORES_PER_NODE;</nodesize>
      <native>&SCHED_NATIVE_CMD;</native>

      <jobname>&TAG;&TN_RUN_PRDGEN;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join>&LOGDIR;/&TN_RUN_PRDGEN;{{ uscore_ensmem_name }}_f#fhr#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
        <taskdep task="&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr#_long"/>
      </dependency>

    </task>
  </metatask>
<!--
************************************************************************
************************************************************************
-->
{%- else %}

{%- if run_task_run_post %}

{%- if fcst_len_hrs == -1 %}
  {%- for icyc in range(num_fcst_len_cycl) %}
  <metatask name="&TN_RUN_POST;{{ uscore_ensmem_name }}">
    <var name="fhr">{% for h in range(0, fcst_len_cycl[icyc]+1) %}{{ " %03d" % h }}{% endfor %}</var>
      {%- if icyc == 0 %}
      <task name="&TN_RUN_POST_CYC1;{{ uscore_ensmem_name }}_f#fhr#" cycledefs="cyc_1st" maxtries="{{ maxtries_run_post }}">
      {%- elif icyc == 1 %}
      <task name="&TN_RUN_POST_CYC2;{{ uscore_ensmem_name }}_f#fhr#" cycledefs="cyc_2nd" maxtries="{{ maxtries_run_post }}">
      {%- elif icyc == 2 %}
      <task name="&TN_RUN_POST_CYC3;{{ uscore_ensmem_name }}_f#fhr#" cycledefs="cyc_3rd" maxtries="{{ maxtries_run_post }}">
      {%- elif icyc == 3 %}
      <task name="&TN_RUN_POST_CYC4;{{ uscore_ensmem_name }}_f#fhr#" cycledefs="cyc_4th" maxtries="{{ maxtries_run_post }}">
      {%- endif %}
        &RSRV_DEFAULT;
        <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_POST;" "&JOBSdir;/JREGIONAL_RUN_POST"</command>
        <nodes>{{ nnodes_run_post }}:ppn={{ ppn_run_post }}</nodes>
        <walltime>{{ wtime_run_post }}</walltime>
        <nodesize>&NCORES_PER_NODE;</nodesize>
        <native>&SCHED_NATIVE_CMD;</native>
      {%- if icyc == 0 %}
        <jobname>&TN_RUN_POST_CYC1;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      {%- elif icyc == 1 %}
        <jobname>&TN_RUN_POST_CYC2;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      {%- elif icyc == 2 %}
        <jobname>&TN_RUN_POST_CYC3;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      {%- elif icyc == 3 %}
        <jobname>&TN_RUN_POST_CYC4;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      {%- endif %}
    <join>&LOGDIR;/&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>
        <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
        <envar><name>USHdir</name><value>&USHdir;</value></envar>
        <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
        <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
        <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
        <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
        <envar><name>fhr</name><value>#fhr#</value></envar>
        <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
        <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

        <dependency>
          <or>
            <taskdep task="&TN_RUN_FCST;{{ uscore_ensmem_name }}"/>
            <and>
              <datadep age="05:00">&DYN_DIR;f#fhr#.nc</datadep>
              <datadep age="05:00">&PHY_DIR;f#fhr#.nc</datadep>
            </and>
          </or>
        </dependency>

      </task>
  </metatask>
  {%- endfor %}

{%- else %}
  {%- if sub_hourly_post %}
<!--
Define the post-processing task for first model output time.  The forecast 
hour corresponding to this output time is zero (formatted to the appropriate
number of digits), and the corresponding forecast minute is the first model 
time step dt_atmos, i.e. it is not zero.  This is because FV3 is designed 
such that its first output file contains fields at the first time step.  
It is for this reason that this task is not rolled into the metatask(s) 
further below.

Note that we wrap this task in a metatask in order to be able to declare
and use the variables fhr and fmn.  This allows the block of code inside
the <task> tag (except for the dependencies) to be identical to the ones 
later below for other output times.
-->
<!--
************************************************************************
************************************************************************
-->
  <metatask>
    <var name="fhr">000</var>
    <var name="fmn">00</var>
<!--
************************************************************************
************************************************************************
-->
    <task name="&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr##fmn#" cycledefs="prodcyc" maxtries="{{ maxtries_run_post }}">

      &RSRV_DEFAULT;

      <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_POST;" "&JOBSdir;/JREGIONAL_RUN_POST"</command>

      <nodes>{{ nnodes_run_post }}:ppn={{ ppn_run_post }}</nodes>
      <walltime>{{ wtime_run_post }}</walltime>
      <nodesize>&NCORES_PER_NODE;</nodesize>
      <native>&SCHED_NATIVE_CMD;</native>

      <jobname>&TAG;&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr##fmn#</jobname>
      <join>&LOGDIR;/&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr##fmn#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>fmn</name><value>#fmn#</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>
<!--
Note that because the forecast minutes and seconds corresponding to the
first model output time are not exactly zero, we use the jinja template
variable first_fv3_file_tstr instead of fhr and fmn to form the file 
names in the dependencies.
-->
      <dependency>
        <or>
          <taskdep task="&TN_RUN_FCST;{{ uscore_ensmem_name }}"/>
          <and>
            <datadep age="05:00">&DYN_DIR;f{{ first_fv3_file_tstr }}.nc</datadep>
            <datadep age="05:00">&PHY_DIR;f{{ first_fv3_file_tstr }}.nc</datadep>
          </and>
        </or>
      </dependency>

    </task>
<!--
************************************************************************
************************************************************************
-->
  </metatask>
<!--
************************************************************************
************************************************************************
-->

<!--
Define the post-processing tasks for the second through last output minutes
of the first output hour (which is zero).  We use two metatasks for this.
The inner one is needed to loop over the minutes, and the outer one is
used in order to be able to declare and use the variable fhr.  Use of this
variable (along with the fmn variable in the inner metatask) allows the
block of code inside the <task> tag to be identical to the ones later below
for other output times.
-->
  <metatask name="&TN_RUN_POST;{{ uscore_ensmem_name }}_f000">

    <var name="fhr">000</var>
    <metatask>

      <var name="fmn">{% for min in range(delta_min, 60, delta_min) %}{{ " %02d" % min }}{% endfor %}</var>
<!--
************************************************************************
************************************************************************
-->
      <task name="&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr##fmn#" cycledefs="prodcyc" maxtries="{{ maxtries_run_post }}">

        &RSRV_DEFAULT;

        <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_POST;" "&JOBSdir;/JREGIONAL_RUN_POST"</command>

        <nodes>{{ nnodes_run_post }}:ppn={{ ppn_run_post }}</nodes>
        <walltime>{{ wtime_run_post }}</walltime>
        <nodesize>&NCORES_PER_NODE;</nodesize>
        <native>&SCHED_NATIVE_CMD;</native>

        <jobname>&TAG;&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr##fmn#</jobname>
     	<join>&LOGDIR;/&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr##fmn#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

        <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
        <envar><name>USHdir</name><value>&USHdir;</value></envar>
        <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
        <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
        <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
        <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
        <envar><name>fhr</name><value>#fhr#</value></envar>
        <envar><name>fmn</name><value>#fmn#</value></envar>
        <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
        <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

        <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
        <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
        <envar><name>TMMARK</name><value>tm00</value></envar>

        <dependency>
          <or>
            <taskdep task="&TN_RUN_FCST;{{ uscore_ensmem_name }}"/>
            <and>
              <datadep age="05:00">&DYN_DIR;f#fhr#:#fmn#:00.nc</datadep>
              <datadep age="05:00">&PHY_DIR;f#fhr#:#fmn#:00.nc</datadep>
            </and>
          </or>
        </dependency>

      </task>
<!--
************************************************************************
************************************************************************
-->

    </metatask>

  </metatask>
  {%- endif %}

<!--
************************************************************************
************************************************************************
-->
  <metatask name="&TN_RUN_POST;{{ uscore_ensmem_name }}">
  {%- if sub_hourly_post %}
<!--
Define the post-processing tasks for the second through next-to-last model
output hours (and all output minutes for each such hour).  
-->
    <var name="fhr">{% for h in range(1, fcst_len_hrs) %}{{ " %03d" % h }}{% endfor %}</var>
    <metatask>
      <var name="fmn">{% for min in range(0, 60, delta_min) %}{{ " %02d" % min }}{% endfor %}</var>
<!--
************************************************************************
************************************************************************
-->
      <task name="&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr##fmn#" cycledefs="prodcyc" maxtries="{{ maxtries_run_post }}">
  {%- else %}
<!--
Define the post-processing tasks for each model output hour.  Note that
only one metatask is needed for this purpose (the inner one that loops 
over the hours), but we use two metatasks in order to be able to use the 
variable fmn, which here is always set to zero.  Use of this variable 
(along with the fhr variable in the inner metatask) allows the block of 
code inside the <task> tag to be identical to the case in which subhourly 
post-processing is performed (i.e. the case in which the minutes are not 
always zero).
-->
    <var name="fhr">{% for h in range(0, fcst_len_hrs+1) %}{{ " %03d" % h }}{% endfor %}</var>
      <task name="&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr#" cycledefs="prodcyc" maxtries="{{ maxtries_run_post }}">
  {%- endif %}

        &RSRV_DEFAULT;
        <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_POST;" "&JOBSdir;/JREGIONAL_RUN_POST"</command>
        <nodes>{{ nnodes_run_post }}:ppn={{ ppn_run_post }}</nodes>
        <walltime>{{ wtime_run_post }}</walltime>
        <nodesize>&NCORES_PER_NODE;</nodesize>
        <native>&SCHED_NATIVE_CMD;</native>
        {%- if sub_hourly_post %}
        <jobname>&TAG;&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr##fmn#</jobname>
	    <join>&LOGDIR;/&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr##fmn#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>
        {%- else %}
        <jobname>&TAG;&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr#</jobname>
	    <join>&LOGDIR;/&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>
        {%- endif %}

        <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
        <envar><name>USHdir</name><value>&USHdir;</value></envar>
        <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
        <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
        <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
        <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
        {%- if sub_hourly_post %}
        <envar><name>fhr</name><value>#fhr#</value></envar>
        <envar><name>fmn</name><value>#fmn#</value></envar>
        {%- else %}
        <envar><name>fhr</name><value>#fhr#</value></envar>
        {%- endif %}
        <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
        <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

        <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
        <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
        <envar><name>TMMARK</name><value>tm00</value></envar>

        <dependency>
          <or>
            <taskdep task="&TN_RUN_FCST;{{ uscore_ensmem_name }}"/>
            <and>
            {%- if sub_hourly_post %}
              <datadep age="05:00">&DYN_DIR;f#fhr#:#fmn#:00.nc</datadep>
              <datadep age="05:00">&PHY_DIR;f#fhr#:#fmn#:00.nc</datadep>
            {%- else %}
              <datadep age="05:00">&DYN_DIR;f#fhr#.nc</datadep>
              <datadep age="05:00">&PHY_DIR;f#fhr#.nc</datadep>
            {%- endif %}
            </and>
          </or>
        </dependency>

      </task>
<!--
************************************************************************
************************************************************************
-->

    {%- if sub_hourly_post %}
    </metatask>
    {%- else %}
    {%- endif %}
  </metatask>

<!--
************************************************************************
************************************************************************
-->
<!--
Define the post-processing task for the last model output time.  The 
forecast hour corresponding to this output time is the length of the 
forecast (assuming it is specified in integer hours), and the corresponding 
minute is 0.  This task cannot be included in the metatask above because 
for a given hour, the latter loops over all the valid output minutes, 
whereas for this last hour, only the first minute must be considered.

Note that we wrap this task in a metatask in order to be able to declare
and use the variables fhr and fmn.  This allows the block of code inside
the <task> tag to be identical to the ones above for other output times.
-->
  {%- if sub_hourly_post %}
  <metatask>

    <var name="fhr">{{ "%03d" % fcst_len_hrs }}</var>
    <var name="fmn">00</var>
    <task name="&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr##fmn#" cycledefs="prodcyc" maxtries="{{ maxtries_run_post }}">

      &RSRV_DEFAULT;
      <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_POST;" "&JOBSdir;/JREGIONAL_RUN_POST"</command>
      <nodes>{{ nnodes_run_post }}:ppn={{ ppn_run_post }}</nodes>
      <walltime>{{ wtime_run_post }}</walltime>
      <nodesize>&NCORES_PER_NODE;</nodesize>
      <native>&SCHED_NATIVE_CMD;</native>
      <jobname>&TAG;&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr##fmn#</jobname>
      <join>&LOGDIR;/&TN_RUN_POST;{{ uscore_ensmem_name }}_f#fhr##fmn#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>fmn</name><value>#fmn#</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr></cyclestr></value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
        <or>
          <taskdep task="&TN_RUN_FCST;{{ uscore_ensmem_name }}"/>
          <and>
            <datadep age="05:00">&DYN_DIR;f#fhr#:#fmn#:00.nc</datadep>
            <datadep age="05:00">&PHY_DIR;f#fhr#:#fmn#:00.nc</datadep>
          </and>
        </or>
      </dependency>

    </task>

  </metatask>
  {%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- endif %}
{%- endif %}

{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{% if do_bufrsnd %}
  <task name="&TN_RUN_BUFRSND;" cycledefs="prodcyc_long" maxtries="1">

        &RSRV_POST;
        &WALL_LIMIT_BUFRSND;

        <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_BUFRSND;" "&JOBSdir;/JREGIONAL_BUFRSND"</command>

        <nodes>{{ nnodes_run_bufrsnd }}:ppn={{ ppn_run_bufrsnd }}</nodes>
        <walltime>{{ wtime_run_bufrsnd }}</walltime>
        <nodesize>&NCORES_PER_NODE;</nodesize>

        <jobname>&TAG;&TN_RUN_BUFRSND;</jobname>
        <join>&LOGDIR;/&TN_RUN_BUFRSND;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

        <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
        <envar><name>USHdir</name><value>&USHdir;</value></envar>
        <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
        <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
        <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
        <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
        <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
        <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

        <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
        <envar><name>TMMARK</name><value>tm00</value></envar>

        <dependency>
          <datadep age="00:10"><cyclestr>&COMIN_BASEDIR;/@Y@m@d@H/fcst_fv3lam/logf{{ "%03d" % postproc_long_len_hrs }}</cyclestr></datadep>
        </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if do_rrfs_dev %}
{%- if machine in ["JET", "HERA"]  %}
{%- if not do_ensemble %}
{%- if ppn_run_graphics %} <!-- maybe removed later -->
<!--
************************************************************************
************************************************************************
-->
  <metatask name="python_maps">

    <var name="tilelabel"> {{ tile_labels }} </var>
    <var name="tileset"> {{ tile_sets }} </var>
    <task name="python_maps{{ uscore_ensmem_name }}_#tilelabel#" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_post }}">

      &RSRV_GRAPHICS;
      &WALL_LIMIT_GRAPHICS;

      <walltime>{{ wtime_run_fcst_long }}</walltime>
      <nodes>{{ nnodes_run_graphics }}:ppn={{ ppn_run_graphics }}</nodes>
      <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
      <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

      <jobname>&TAG;python{{ uscore_ensmem_name }}_<cyclestr>@H</cyclestr>_#tilelabel#</jobname>
      <join>&LOGDIR;/python{{ uscore_ensmem_name }}_#tilelabel#&LOGEXT;</join>
      <command>&LOAD_MODULES_RUN_TASK_FP; "run_graphics" "&JOBSdir;/JREGIONAL_RUN_GRAPHICS"</command>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>GRAPHICS_TYPE</name><value>maps</value></envar>
      <envar><name>TILES</name><value>#tileset#</value></envar>
      <envar><name>TILELABEL</name><value>#tilelabel#</value></envar>
      <envar><name>ENSCTRL_COMOUT_BASEDIR</name><value>&ENSCTRL_COMOUT_BASEDIR;</value></envar>

      <dependency>
        <or>
          <taskdep task="&TN_RUN_PRDGEN;{{ uscore_ensmem_name }}_f000"/>
          <taskdep task="&TN_RUN_PRDGEN;{{ uscore_ensmem_name }}_f000_long"/>
        </or>
      </dependency>
    </task>
  </metatask>
<!--
************************************************************************
************************************************************************
-->
  <task name="python_skewts{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_post }}">

    &RSRV_GRAPHICS;
    &WALL_LIMIT_GRAPHICS;

    <walltime>{{ wtime_run_fcst_long }}</walltime>
    <nodes>{{ nnodes_run_graphics }}:ppn={{ ppn_run_graphics }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
    <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

    <jobname>&TAG;python{{ uscore_ensmem_name }}_<cyclestr>@H</cyclestr>_skewts</jobname>
    <join>&LOGDIR;/python_skewts{{ uscore_ensmem_name }}<cyclestr>_@H</cyclestr>&LOGEXT;</join>
    <command>&LOAD_MODULES_RUN_TASK_FP; "run_graphics" "&JOBSdir;/JREGIONAL_RUN_GRAPHICS"</command>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>GRAPHICS_TYPE</name><value>skewts</value></envar>
    <envar><name>ENSCTRL_COMOUT_BASEDIR</name><value>&ENSCTRL_COMOUT_BASEDIR;</value></envar>

    <dependency>
      <or>
        <taskdep task="&TN_RUN_PRDGEN;{{ uscore_ensmem_name }}_f000"/>
        <taskdep task="&TN_RUN_PRDGEN;{{ uscore_ensmem_name }}_f000_long"/>
      </or>
    </dependency>
  </task>
<!--
************************************************************************
************************************************************************
-->
{%- endif %}
{%- endif %}
{%- endif %}
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_plot_allvars %}
  <task name="&TN_PLOT_ALLVARS;" cycledefs="prodcyc" maxtries="{{ maxtries_plot_allvars }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_PLOT_ALLVARS;" "&JOBSdir;/JREGIONAL_PLOT_ALLVARS"</command>
    <nodes>{{ nnodes_plot_allvars }}:ppn={{ ppn_plot_allvars }}</nodes>
    <walltime>{{ wtime_plot_allvars }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
    <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

    <jobname>&TAG;&TN_PLOT_ALLVARS;</jobname>
    <join>&LOGDIR;/&TN_PLOT_ALLVARS;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <dependency>
      <and>
{#- Redundant dependency to simplify jinja code.
This dependency will always evaluate to true.  It is included because
rocoto does not allow empty <dependency>, <and>, and other tags.  Without
it, we'd have to include more jinja if-statements here.
#}
        <streq><left>TRUE</left><right>TRUE</right></streq>
        {%- if write_dopost %}
        <taskdep task="&TN_RUN_FCST;{{ uscore_ensmem_name }}"/>
        {%- elif run_task_run_post %}
        <metataskdep metatask="&TN_RUN_POST;{{ uscore_ensmem_name }}"/>
        {%- endif %}
      </and>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_pre_post_stat %}
  <task name="&TN_PRE_POST_STAT;" cycledefs="prodcyc" maxtries="{{ maxtries_pre_post_stat }}">
    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_PRE_POST_STAT;" "&JOBSdir;/JREGIONAL_PRE_POST_STAT"</command>
    <nodes>{{ nnodes_pre_post_stat }}:ppn={{ ppn_pre_post_stat }}</nodes>
    <walltime>{{ wtime_pre_post_stat }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <jobname>&TAG;&TN_PRE_POST_STAT;</jobname>
    <join>&LOGDIR;/&TN_PRE_POST_STAT;<cyclestr>_@Y@m@d@H&LOGEXT;</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>    
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar> 
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>    
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
{%- if run_task_run_post %}
  {%- if fcst_len_hrs == -1 %}
      <datadep age="00:00:00:05"><cyclestr>&COMIN_DIR;</cyclestr>/&TN_RUN_POST;<cyclestr>_@Y@m@d@H</cyclestr>&CMPEXT;</datadep>
  {%- else %}
      <metataskdep metatask="&TN_RUN_POST;{{ uscore_ensmem_name }}"/>
  {%- endif %}
{%- else %}
      <taskdep task="&TN_RUN_FCST;{{ uscore_ensmem_name }}"/>
{%- endif %}
    </dependency>
  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_post_stat_o3 %}
  <task name="&TN_POST_STAT_O3;" cycledefs="prodcyc" maxtries="{{ maxtries_post_stat_o3 }}">
    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_POST_STAT_O3;" "&JOBSdir;/JREGIONAL_POST_STAT_O3"</command>
    <nodes>{{ nnodes_post_stat_o3 }}:ppn={{ ppn_post_stat_o3 }}</nodes>
{%- if machine not in ["GAEA"]  %}
    <memory>{{ mem_post_stat_o3 }}</memory>
{%- endif %}
    <walltime>{{ wtime_post_stat_o3 }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <jobname>&TAG;&TN_POST_STAT_O3;</jobname>
    <join>&LOGDIR;/&TN_POST_STAT_O3;<cyclestr>_@Y@m@d@H&LOGEXT;</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>    
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar> 
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>    
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <taskdep task="&TN_PRE_POST_STAT;"/>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_post_stat_pm25 %}
  <task name="&TN_POST_STAT_PM25;" cycledefs="prodcyc" maxtries="{{ maxtries_post_stat_pm25 }}">
    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_POST_STAT_PM25;" "&JOBSdir;/JREGIONAL_POST_STAT_PM25"</command>
    <nodes>{{ nnodes_post_stat_pm25 }}:ppn={{ ppn_post_stat_pm25 }}</nodes>
{%- if machine not in ["GAEA"]  %}
    <memory>{{ mem_post_stat_pm25 }}</memory>
{%- endif %}    
    <walltime>{{ wtime_post_stat_pm25 }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <jobname>&TAG;&TN_POST_STAT_PM25;</jobname>
    <join>&LOGDIR;/&TN_POST_STAT_PM25;<cyclestr>_@Y@m@d@H&LOGEXT;</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>    
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar> 
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>    
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <taskdep task="&TN_PRE_POST_STAT;"/>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_bias_correction_o3 %}
  <task name="&TN_BIAS_CORRECTION_O3;" cycledefs="prodcyc" maxtries="{{ maxtries_bias_correction_o3 }}">
    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_BIAS_CORRECTION_O3;" "&JOBSdir;/JREGIONAL_BIAS_CORRECTION_O3"</command>
    <nodes>{{ nnodes_bias_correction_o3 }}:ppn={{ ppn_bias_correction_o3 }}</nodes>
{%- if machine not in ["GAEA"]  %}
    <memory>{{ mem_bias_correction_o3 }}</memory>
{%- endif %}
    <walltime>{{ wtime_bias_correction_o3 }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <jobname>&TAG;&TN_BIAS_CORRECTION_O3;</jobname>
    <join>&LOGDIR;/&TN_BIAS_CORRECTION_O3;<cyclestr>_@Y@m@d@H&LOGEXT;</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>    
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar> 
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>    
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <taskdep task="&TN_PRE_POST_STAT;"/>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_bias_correction_pm25 %}
  <task name="&TN_BIAS_CORRECTION_PM25;" cycledefs="prodcyc" maxtries="{{ maxtries_bias_correction_pm25 }}">
    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_BIAS_CORRECTION_PM25;" "&JOBSdir;/JREGIONAL_BIAS_CORRECTION_PM25"</command>
    <nodes>{{ nnodes_bias_correction_pm25 }}:ppn={{ ppn_bias_correction_pm25 }}</nodes>
{%- if machine not in ["GAEA"]  %}
    <memory>{{ mem_bias_correction_pm25 }}</memory>
{%- endif %}
    <walltime>{{ wtime_bias_correction_pm25 }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <jobname>&TAG;&TN_BIAS_CORRECTION_PM25;</jobname>
    <join>&LOGDIR;/&TN_BIAS_CORRECTION_PM25;<cyclestr>_@Y@m@d@H&LOGEXT;</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>    
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar> 
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>    
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <taskdep task="&TN_PRE_POST_STAT;"/>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_get_obs_ccpa %}
  <task name="&TN_GET_OBS_CCPA;" cycledefs="prodcyc" maxtries="{{ maxtries_get_obs_ccpa }}">

    &RSRV_HPSS;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&GET_OBS;" "&JOBSdir;/JREGIONAL_GET_OBS_CCPA"</command>
    <nodes>{{ nnodes_get_obs_ccpa }}:ppn={{ ppn_get_obs_ccpa }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_get_obs_ccpa }}</memory>
  {%- endif %}
    <walltime>{{ wtime_get_obs_ccpa }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_GET_OBS_CCPA;</jobname>
    <join>&LOGDIR;/&TN_GET_OBS_CCPA;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(0, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>ACCUM</name><value>01</value></envar>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_get_obs_mrms %}
  <task name="&TN_GET_OBS_MRMS;" cycledefs="prodcyc" maxtries="{{ maxtries_get_obs_mrms }}">

    &RSRV_HPSS;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&GET_OBS;" "&JOBSdir;/JREGIONAL_GET_OBS_MRMS"</command>
    <nodes>{{ nnodes_get_obs_mrms }}:ppn={{ ppn_get_obs_mrms }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_get_obs_mrms }}</memory>
  {%- endif %}
    <walltime>{{ wtime_get_obs_mrms }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_GET_OBS_MRMS;</jobname>
    <join>&LOGDIR;/&TN_GET_OBS_MRMS;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&MRMS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(0, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>SCRIPTSdir</name><value>&SCRIPTSdir;</value></envar>
    <envar><name>VAR</name><value>REFC RETOP</value></envar>
 
  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- if run_task_get_obs_ndas %}
  <task name="&TN_GET_OBS_NDAS;" cycledefs="prodcyc" maxtries="{{ maxtries_get_obs_ndas }}">

    &RSRV_HPSS;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&GET_OBS;" "&JOBSdir;/JREGIONAL_GET_OBS_NDAS"</command>
    <nodes>{{ nnodes_get_obs_ndas }}:ppn={{ ppn_get_obs_ndas }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_get_obs_ndas }}</memory>
  {%- endif %}
    <walltime>{{ wtime_get_obs_ndas }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_GET_OBS_NDAS;</jobname>
    <join>&LOGDIR;/&TN_GET_OBS_NDAS;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&NDAS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(0, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>

  </task>
{%- endif %}

<!--
************************************************************************
************************************************************************
-->
{%- if run_task_vx_gridstat %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_APCP01H;{{ uscore_ensmem_name }}" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_apcp01h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_apcp01h }}:ppn={{ ppn_run_met_gridstat_vx_apcp01h }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_apcp01h }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_apcp01h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_APCP01H;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_APCP01H;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(1, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>01</value></envar>
    <envar><name>USCORE_ENSMEM_NAME_OR_NULL</name><value>{{uscore_ensmem_name}}</value></envar>
  {%- if do_ensemble %}
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
  {%- endif %}

    <dependency>
      <and>
{#- Redundant dependency to simplify jinja code. #}
        <streq><left>TRUE</left><right>TRUE</right></streq>
  {%- if run_task_get_obs_ccpa %}
        <taskdep task="&TN_GET_OBS_CCPA;"/>
  {%- endif %}
  {%- if write_dopost %}
        <taskdep task="&TN_RUN_FCST;{{ uscore_ensmem_name }}"/>
  {%- elif run_task_run_post %}
        <metataskdep metatask="&TN_RUN_POST;{{ uscore_ensmem_name }}"/>
  {%- endif %}
      </and>
    </dependency>

  </task>

  {%- if fcst_len_hrs >= 3 %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_APCP03H;{{ uscore_ensmem_name }}" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_apcp03h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_apcp03h }}:ppn={{ ppn_run_met_gridstat_vx_apcp03h }}</nodes>
    {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_apcp03h }}</memory>
    {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_apcp03h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_APCP03H;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_APCP03H;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(3, fcst_len_hrs+1, 3) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>03</value></envar>
    <envar><name>USCORE_ENSMEM_NAME_OR_NULL</name><value>{{uscore_ensmem_name}}</value></envar>
    {%- if do_ensemble %}
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
    {%- endif %}

    <dependency>
      <taskdep task="&TN_RUN_MET_GRIDSTAT_VX_APCP01H;{{ uscore_ensmem_name }}"/>
    </dependency>

  </task>
  {%- endif %}

  {%- if fcst_len_hrs >= 6 %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_APCP06H;{{ uscore_ensmem_name }}" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_apcp06h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_apcp06h }}:ppn={{ ppn_run_met_gridstat_vx_apcp06h }}</nodes>
    {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_apcp06h }}</memory>
    {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_apcp06h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_APCP06H;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_APCP06H;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(6, fcst_len_hrs+1, 6) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>06</value></envar>
    <envar><name>USCORE_ENSMEM_NAME_OR_NULL</name><value>{{uscore_ensmem_name}}</value></envar>
    {%- if do_ensemble %}
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
    {%- endif %}

    <dependency>
      <taskdep task="&TN_RUN_MET_GRIDSTAT_VX_APCP01H;{{ uscore_ensmem_name }}"/>
    </dependency>

  </task>
  {%- endif %}

  {%- if fcst_len_hrs >= 24 %}
<!--
     ************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_APCP24H;{{ uscore_ensmem_name }}" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_apcp24h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_apcp24h }}:ppn={{ ppn_run_met_gridstat_vx_apcp24h }}</nodes>
    {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_apcp24h }}</memory>
    {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_apcp24h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_APCP24H;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_APCP24H;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(24, fcst_len_hrs+1, 24) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>24</value></envar>
    <envar><name>USCORE_ENSMEM_NAME_OR_NULL</name><value>{{uscore_ensmem_name}}</value></envar>
    {%- if do_ensemble %}
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
    {%- endif %}

    <dependency>
      <taskdep task="&TN_RUN_MET_GRIDSTAT_VX_APCP01H;{{ uscore_ensmem_name }}"/>
    </dependency>

  </task>
  {%- endif %}

<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_REFC;{{ uscore_ensmem_name }}" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_refc }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_refc }}:ppn={{ ppn_run_met_gridstat_vx_refc }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_refc }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_refc }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_REFC;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_REFC;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&MRMS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(1, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>REFC</value></envar>
    <envar><name>USCORE_ENSMEM_NAME_OR_NULL</name><value>{{uscore_ensmem_name}}</value></envar>
  {%- if do_ensemble %}
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
  {%- endif %}

    <dependency>
      <and>
{#- Redundant dependency to simplify jinja code. #}
        <streq><left>TRUE</left><right>TRUE</right></streq>
  {%- if run_task_get_obs_mrms %}
        <taskdep task="&TN_GET_OBS_MRMS;"/>
  {%- endif %}
  {%- if write_dopost %}
        <taskdep task="&TN_RUN_FCST;{{ uscore_ensmem_name }}"/>
  {%- elif run_task_run_post %}
        <metataskdep metatask="&TN_RUN_POST;{{ uscore_ensmem_name }}"/>
  {%- endif %}
      </and>
    </dependency>

  </task>

<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_RETOP;{{ uscore_ensmem_name }}" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_retop }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_retop }}:ppn={{ ppn_run_met_gridstat_vx_retop }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_retop }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_retop }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_RETOP;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_RETOP;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&MRMS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(1, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>RETOP</value></envar>
    <envar><name>USCORE_ENSMEM_NAME_OR_NULL</name><value>{{uscore_ensmem_name}}</value></envar>
  {%- if do_ensemble %}
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
  {%- endif %}

    <dependency>
      <and>
{#- Redundant dependency to simplify jinja code. #}
      <streq><left>TRUE</left><right>TRUE</right></streq>
  {%- if run_task_get_obs_mrms %}
        <taskdep task="&TN_GET_OBS_MRMS;"/>
  {%- endif %}
  {%- if write_dopost %}
        <taskdep task="&TN_RUN_FCST;{{ uscore_ensmem_name }}"/>
  {%- elif run_task_run_post %}
        <metataskdep metatask="&TN_RUN_POST;{{ uscore_ensmem_name }}"/>
  {%- endif %}
      </and>
    </dependency>

  </task>
{%- endif %}

{%- if run_task_vx_pointstat %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_POINTSTAT_VX_SFC;{{ uscore_ensmem_name }}" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_pointstat_vx_sfc }}">
    &RSRV_DEFAULT;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_POINTSTAT_VX"</command>
    <nodes>{{ nnodes_run_met_pointstat_vx_sfc }}:ppn={{ ppn_run_met_pointstat_vx_sfc }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_pointstat_vx_sfc }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_pointstat_vx_sfc }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_POINTSTAT_VX_SFC;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_POINTSTAT_VX_SFC;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&NDAS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(0, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>SFC</value></envar>
    <envar><name>USCORE_ENSMEM_NAME_OR_NULL</name><value>{{uscore_ensmem_name}}</value></envar>
  {%- if do_ensemble %}
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
  {%- endif %}

    <dependency>
      <and>
{#- Redundant dependency to simplify jinja code. #}
      <streq><left>TRUE</left><right>TRUE</right></streq>
  {%- if run_task_get_obs_ndas %}
        <taskdep task="&TN_GET_OBS_NDAS;"/>
  {%- endif %}
  {%- if write_dopost %}
        <taskdep task="&TN_RUN_FCST;{{ uscore_ensmem_name }}"/>
  {%- elif run_task_run_post %}
        <metataskdep metatask="&TN_RUN_POST;{{ uscore_ensmem_name }}"/>
  {%- endif %}
      </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_POINTSTAT_VX_UPA;{{ uscore_ensmem_name }}" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_pointstat_vx_upa }}">
    &RSRV_DEFAULT;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_POINTSTAT_VX"</command>
    <nodes>{{ nnodes_run_met_pointstat_vx_upa }}:ppn={{ ppn_run_met_pointstat_vx_upa }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_pointstat_vx_upa }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_pointstat_vx_upa }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_POINTSTAT_VX_UPA;{{ uscore_ensmem_name }}</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_POINTSTAT_VX_UPA;{{ uscore_ensmem_name }}<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&NDAS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(0, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>UPA</value></envar>
    <envar><name>USCORE_ENSMEM_NAME_OR_NULL</name><value>{{uscore_ensmem_name}}</value></envar>
  {%- if do_ensemble %}
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
  {%- endif %}

    <dependency>
      <and>
{#- Redundant dependency to simplify jinja code. #}
      <streq><left>TRUE</left><right>TRUE</right></streq>
  {%- if run_task_get_obs_ndas %}
        <taskdep task="&TN_GET_OBS_NDAS;"/>
  {%- endif %}
  {%- if write_dopost %}
        <taskdep task="&TN_RUN_FCST;{{ uscore_ensmem_name }}"/>
  {%- elif run_task_run_post %}
        <metataskdep metatask="&TN_RUN_POST;{{ uscore_ensmem_name }}"/>
  {%- endif %}
      </and>
    </dependency>

  </task>
{%- endif %}

{%- if do_ensemble %}
  </metatask>
{%- endif %}

{%- if run_task_vx_ensgrid %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP01H;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_ensemblestat_vx_apcp01h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_ENSEMBLESTAT_VX_GRID"</command>
    <nodes>{{ nnodes_run_met_ensemblestat_vx_apcp01h }}:ppn={{ ppn_run_met_ensemblestat_vx_apcp01h }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_ensemblestat_vx_apcp01h }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_ensemblestat_vx_apcp01h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_ENSEMBLESTAT_VX_APCP01H;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_ENSEMBLESTAT_VX_APCP01H;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(1, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>01</value></envar>

    <dependency>
      <metataskdep metatask="run_ensemble"/>
    </dependency>

  </task>

  {%- if fcst_len_hrs >= 3 %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP03H;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_ensemblestat_vx_apcp03h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_ENSEMBLESTAT_VX_GRID"</command>
    <nodes>{{ nnodes_run_met_ensemblestat_vx_apcp03h }}:ppn={{ ppn_run_met_ensemblestat_vx_apcp03h }}</nodes>
    {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_ensemblestat_vx_apcp03h }}</memory>
    {%- endif %}
    <walltime>{{ wtime_run_met_ensemblestat_vx_apcp03h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_ENSEMBLESTAT_VX_APCP03H;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_ENSEMBLESTAT_VX_APCP03H;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(3, fcst_len_hrs+1, 3) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>03</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP01H;"/>
    </dependency>

  </task>
  {%- endif %}

  {%- if fcst_len_hrs >= 6 %}   
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP06H;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_ensemblestat_vx_apcp06h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_ENSEMBLESTAT_VX_GRID"</command>
    <nodes>{{ nnodes_run_met_ensemblestat_vx_apcp06h }}:ppn={{ ppn_run_met_ensemblestat_vx_apcp06h }}</nodes>
    {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_ensemblestat_vx_apcp06h }}</memory>
    {%- endif %}
    <walltime>{{ wtime_run_met_ensemblestat_vx_apcp06h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_ENSEMBLESTAT_VX_APCP06H;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_ENSEMBLESTAT_VX_APCP06H;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(6, fcst_len_hrs+1, 6) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>06</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP01H;"/>
    </dependency>

  </task>
  {%- endif %}

  {%- if fcst_len_hrs >= 24 %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP24H;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_ensemblestat_vx_apcp24h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_ENSEMBLESTAT_VX_GRID"</command>
    <nodes>{{ nnodes_run_met_ensemblestat_vx_apcp24h }}:ppn={{ ppn_run_met_ensemblestat_vx_apcp24h }}</nodes>
    {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_ensemblestat_vx_apcp24h }}</memory>
    {%- endif %}
    <walltime>{{ wtime_run_met_ensemblestat_vx_apcp24h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_ENSEMBLESTAT_VX_APCP24H;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_ENSEMBLESTAT_VX_APCP24H;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(24, fcst_len_hrs+1, 24) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>24</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP01H;"/>
    </dependency>

  </task>
  {%- endif %}

<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_ENSEMBLESTAT_VX_REFC;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_ensemblestat_vx_refc }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_ENSEMBLESTAT_VX_GRID"</command>
    <nodes>{{ nnodes_run_met_ensemblestat_vx_refc }}:ppn={{ ppn_run_met_ensemblestat_vx_refc }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_ensemblestat_vx_refc }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_ensemblestat_vx_refc }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_ENSEMBLESTAT_VX_REFC;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_ENSEMBLESTAT_VX_REFC;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&MRMS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(1, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>REFC</value></envar>

    <dependency>
      <metataskdep metatask="run_ensemble"/>
    </dependency>

  </task>

<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_ENSEMBLESTAT_VX_RETOP;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_ensemblestat_vx_retop }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_ENSEMBLESTAT_VX_GRID"</command>
    <nodes>{{ nnodes_run_met_ensemblestat_vx_retop }}:ppn={{ ppn_run_met_ensemblestat_vx_retop }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_ensemblestat_vx_retop }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_ensemblestat_vx_retop }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_ENSEMBLESTAT_VX_RETOP;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_ENSEMBLESTAT_VX_RETOP;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&MRMS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(1, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>RETOP</value></envar>

    <dependency>
      <metataskdep metatask="run_ensemble"/>
    </dependency>

  </task>
{%- endif %}

{%- if run_task_vx_enspoint %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_ENSEMBLESTAT_VX_SFC;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_ensemblestat_vx_sfc }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_ENSEMBLESTAT_VX_POINT"</command>
    <nodes>{{ nnodes_run_met_ensemblestat_vx_sfc }}:ppn={{ ppn_run_met_ensemblestat_vx_sfc }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_ensemblestat_vx_sfc }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_ensemblestat_vx_sfc }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_ENSEMBLESTAT_VX_SFC;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_ENSEMBLESTAT_VX_SFC;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&NDAS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(0, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>SFC</value></envar>

    <dependency>
      <metataskdep metatask="run_ensemble"/>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_ENSEMBLESTAT_VX_UPA;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_ensemblestat_vx_upa }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_ENSEMBLESTAT_VX_POINT"</command>
    <nodes>{{ nnodes_run_met_ensemblestat_vx_upa }}:ppn={{ ppn_run_met_ensemblestat_vx_upa }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_ensemblestat_vx_upa }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_ensemblestat_vx_upa }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_ENSEMBLESTAT_VX_UPA;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_ENSEMBLESTAT_VX_UPA;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&NDAS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(0, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>UPA</value></envar>

    <dependency>
      <metataskdep metatask="run_ensemble"/>
    </dependency>

  </task>
{%- endif %}

{%- if run_task_vx_ensgrid %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP01H;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_ensmean_apcp01h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX_ENSMEAN"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_ensmean_apcp01h }}:ppn={{ ppn_run_met_gridstat_vx_ensmean_apcp01h }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_ensmean_apcp01h }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_ensmean_apcp01h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP01H;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP01H;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(1, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>01</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP01H;"/>
    </dependency>

  </task>

  {%- if fcst_len_hrs >= 3 %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP03H;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_ensmean_apcp03h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX_ENSMEAN"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_ensmean_apcp03h }}:ppn={{ ppn_run_met_gridstat_vx_ensmean_apcp03h }}</nodes>
    {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_ensmean_apcp03h }}</memory>
    {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_ensmean_apcp03h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP03H;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP03H;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(3, fcst_len_hrs+1, 3) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>03</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP03H;"/>
    </dependency>

  </task>
  {%- endif %}

  {%- if fcst_len_hrs >= 6 %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP06H;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_ensmean_apcp06h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX_ENSMEAN"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_ensmean_apcp06h }}:ppn={{ ppn_run_met_gridstat_vx_ensmean_apcp06h }}</nodes>
    {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_ensmean_apcp06h }}</memory>
    {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_ensmean_apcp06h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP06H;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP06H;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(6, fcst_len_hrs+1, 6) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>06</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP06H;"/>
    </dependency>

  </task>
  {%- endif %}

  {%- if fcst_len_hrs >= 24 %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP24H;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_ensmean_apcp24h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX_ENSMEAN"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_ensmean_apcp24h }}:ppn={{ ppn_run_met_gridstat_vx_ensmean_apcp24h }}</nodes>
    {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_ensmean_apcp24h }}</memory>
    {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_ensmean_apcp24h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP24H;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_ENSMEAN_APCP24H;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(24, fcst_len_hrs+1, 24) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>24</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP24H;"/>
    </dependency>

  </task>
  {%- endif %}
{%- endif %}

{%- if run_task_vx_enspoint %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_POINTSTAT_VX_ENSMEAN_SFC;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_pointstat_vx_ensmean_sfc }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_POINTSTAT_VX_ENSMEAN"</command>
    <nodes>{{ nnodes_run_met_pointstat_vx_ensmean_sfc }}:ppn={{ ppn_run_met_pointstat_vx_ensmean_sfc }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_pointstat_vx_ensmean_sfc }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_pointstat_vx_ensmean_sfc }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_POINTSTAT_VX_ENSMEAN_SFC;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_POINTSTAT_VX_ENSMEAN_SFC;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&NDAS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(0, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>SFC</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_SFC;"/>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_POINTSTAT_VX_ENSMEAN_UPA;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_pointstat_vx_ensmean_upa }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_POINTSTAT_VX_ENSMEAN"</command>
    <nodes>{{ nnodes_run_met_pointstat_vx_ensmean_upa }}:ppn={{ ppn_run_met_pointstat_vx_ensmean_upa }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_pointstat_vx_ensmean_upa }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_pointstat_vx_ensmean_upa }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_POINTSTAT_VX_ENSMEAN_UPA;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_POINTSTAT_VX_ENSMEAN_UPA;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&NDAS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(0, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>UPA</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_UPA;"/>
    </dependency>

  </task>
{%- endif %}

{%- if run_task_vx_ensgrid %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP01H;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_ensprob_apcp01h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX_ENSPROB"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_ensprob_apcp01h }}:ppn={{ ppn_run_met_gridstat_vx_ensprob_apcp01h }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_ensprob_apcp01h }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_ensprob_apcp01h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP01H;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP01H;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(1, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>01</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP01H;"/>
    </dependency>

  </task>

  {%- if fcst_len_hrs >= 3 %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP03H;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_ensprob_apcp03h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX_ENSPROB"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_ensprob_apcp03h }}:ppn={{ ppn_run_met_gridstat_vx_ensprob_apcp03h }}</nodes>
    {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_ensprob_apcp03h }}</memory>
    {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_ensprob_apcp03h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP03H;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP03H;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(3, fcst_len_hrs+1, 3) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>03</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP03H;"/>
    </dependency>

  </task>
  {%- endif %}

  {%- if fcst_len_hrs >= 6 %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP06H;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_ensprob_apcp06h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX_ENSPROB"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_ensprob_apcp06h }}:ppn={{ ppn_run_met_gridstat_vx_ensprob_apcp06h }}</nodes>
    {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_ensprob_apcp06h }}</memory>
    {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_ensprob_apcp06h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP06H;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP06H;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(6, fcst_len_hrs+1, 6) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>06</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP06H;"/>
    </dependency>

  </task>
  {%- endif %}

  {%- if fcst_len_hrs >= 24 %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP24H;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_ensprob_apcp24h }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX_ENSPROB"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_ensprob_apcp24h }}:ppn={{ ppn_run_met_gridstat_vx_ensprob_apcp24h }}</nodes>
    {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_ensprob_apcp24h }}</memory>
    {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_ensprob_apcp24h }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP24H;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_APCP24H;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&CCPA_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(24, fcst_len_hrs+1, 24) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>APCP</value></envar>
    <envar><name>ACCUM</name><value>24</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_APCP24H;"/>
    </dependency>

  </task>
  {%- endif %}

<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_REFC;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_ensprob_refc }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX_ENSPROB"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_ensprob_refc }}:ppn={{ ppn_run_met_gridstat_vx_ensprob_refc }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_ensprob_refc }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_ensprob_refc }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_REFC;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_REFC;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&MRMS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(1, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>REFC</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_REFC;"/>
    </dependency>

  </task>

<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_RETOP;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_gridstat_vx_ensprob_retop }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_VX_ENSPROB"</command>
    <nodes>{{ nnodes_run_met_gridstat_vx_ensprob_retop }}:ppn={{ ppn_run_met_gridstat_vx_ensprob_retop }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_gridstat_vx_ensprob_retop }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_gridstat_vx_ensprob_retop }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_RETOP;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_GRIDSTAT_VX_ENSPROB_RETOP;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&MRMS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(1, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>RETOP</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_RETOP;"/>
    </dependency>

  </task>
{%- endif %}

{%- if run_task_vx_enspoint %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_POINTSTAT_VX_ENSPROB_SFC;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_pointstat_vx_ensprob_sfc }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_POINTSTAT_VX_ENSPROB"</command>
    <nodes>{{ nnodes_run_met_pointstat_vx_ensprob_sfc }}:ppn={{ ppn_run_met_pointstat_vx_ensprob_sfc }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_pointstat_vx_ensprob_sfc }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_pointstat_vx_ensprob_sfc }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_POINTSTAT_VX_ENSPROB_SFC;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_POINTSTAT_VX_ENSPROB_SFC;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&NDAS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(0, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>SFC</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_SFC;"/>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_MET_POINTSTAT_VX_ENSPROB_UPA;" cycledefs="prodcyc" maxtries="{{ maxtries_run_met_pointstat_vx_ensprob_upa }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_VX;" "&JOBSdir;/JREGIONAL_RUN_MET_POINTSTAT_VX_ENSPROB"</command>
    <nodes>{{ nnodes_run_met_pointstat_vx_ensprob_upa }}:ppn={{ ppn_run_met_pointstat_vx_ensprob_upa }}</nodes>
  {%- if machine not in ["GAEA", "NOAACLOUD"]  %}
    <memory>{{ mem_run_met_pointstat_vx_ensprob_upa }}</memory>
  {%- endif %}
    <walltime>{{ wtime_run_met_pointstat_vx_ensprob_upa }}</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    <native>&SCHED_NATIVE_CMD;</native>
    <jobname>&TAG;&TN_RUN_MET_POINTSTAT_VX_ENSPROB_UPA;</jobname>
    <join>&LOGDIR;/&TN_RUN_MET_POINTSTAT_VX_ENSPROB_UPA;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>OBS_DIR</name><value>&NDAS_OBS_DIR;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>FHR</name><value><cyclestr> {% for h in range(0, fcst_len_hrs+1) %}{{ " %02d" % h  }}{% endfor %} </cyclestr></value></envar>
    <envar><name>VAR</name><value>UPA</value></envar>

    <dependency>
      <taskdep task="&TN_RUN_MET_ENSEMBLESTAT_VX_UPA;"/>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->

{%- if do_rrfs_dev -%}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_CLEAN;" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_post }}">

    &RSRV_POST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_RUN_POST;" "&JOBSdir;/JREGIONAL_RUN_CLEAN"</command>

    <nodes> 1:ppn=1</nodes>
    <walltime>00:15:00</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
    <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

    <jobname>&TAG;&TN_RUN_CLEAN;</jobname>
    <join>&LOGDIR;/&TN_RUN_CLEAN;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>NWGES_BASEDIR</name><value><cyclestr>&NWGES_BASEDIR;</cyclestr></value></envar>
{%- if do_ensemble %}
    <envar><name>nens</name><value><cyclestr>{{ num_ens_members }}</cyclestr></value></envar>
{%- else %}
    <envar><name>nens</name><value><cyclestr>0</cyclestr></value></envar>
{%- endif %}

  </task>
<!--
************************************************************************
************************************************************************
-->

{%- if machine in ["JET", "HERA"]  %}

<!--
************************************************************************
************************************************************************
-->
{%- if do_ensemble %}
  <task name="&TN_RUN_ARCHIVE;_ens" cycledefs="archive" maxtries="{{ maxtries_run_post }}">

    &RSRV_HPSS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_GET_EXTRN_ICS;" "&JOBSdir;/JREGIONAL_RUN_ARCHIVE"</command>

    <nodes> 1:ppn=1</nodes>
    <walltime>23:00:00</walltime>
    <memory>24G</memory>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
    <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

    <jobname>&TAG;&TN_RUN_ARCHIVE;</jobname>
    <join>&LOGDIR;/&TN_RUN_ARCHIVE;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>

  </task>

{%- else %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&TN_RUN_ARCHIVE;" cycledefs="archive" maxtries="{{ maxtries_run_post }}">

    &RSRV_HPSS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_GET_EXTRN_ICS;" "&JOBSdir;/JREGIONAL_RUN_ARCHIVE"</command>

    <nodes> 1:ppn=1</nodes>
    <walltime>08:00:00</walltime>
    <memory>24G</memory>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
    <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

    <jobname>&TAG;&TN_RUN_ARCHIVE;</jobname>
    <join>&LOGDIR;/&TN_RUN_ARCHIVE;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- endif %}

<!--
************************************************************************
************************************************************************
-->
{%- if machine in ["WCOSS2"]  %}
  <task name="&TN_RUN_ARCHIVE;" cycledefs="archive" maxtries="{{ maxtries_run_post }}">

    &RSRV_HPSS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&TN_GET_EXTRN_ICS;" "&JOBSdir;/JREGIONAL_RUN_ARCHIVE"</command>

    <nodes>1:ppn=1</nodes>
    <walltime>08:00:00</walltime>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
    <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

    <jobname>&TAG;&TN_RUN_ARCHIVE;</jobname>
    <join>&LOGDIR;/&TN_RUN_ARCHIVE;<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <dependency>
       <or>
          <and>
            <or>
             <streq><left>00</left><right><cyclestr>@H</cyclestr></right></streq>
             <streq><left>12</left><right><cyclestr>@H</cyclestr></right></streq>
            </or>
            <taskdep task="&TN_RUN_PRDGEN;_f060"/>
          </and>
          <and>
            <strneq><left>00</left><right><cyclestr>@H</cyclestr></right></strneq>
            <strneq><left>12</left><right><cyclestr>@H</cyclestr></right></strneq>
            <taskdep task="&TN_RUN_PRDGEN;_f003"/>
          </and>
       </or>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{% if do_ensemble and do_ens_graphics %}
{%- if machine in ["JET", "HERA"] %}
  <metatask name="ensemble_maps">

    <var name="tilelabel"> {{ tile_labels }} </var>
    <var name="tileset"> {{ tile_sets }} </var>
    <task name="python_maps_#tilelabel#" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_post }}">

      &RSRV_GRAPHICS;
      &WALL_LIMIT_GRAPHICS;

      <walltime>{{ wtime_run_fcst }}</walltime>
      <nodes>{{ nnodes_run_graphics }}:ppn={{ ppn_run_graphics }}</nodes>
      <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
      <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

      <jobname>&TAG;python_<cyclestr>@H</cyclestr>_#tilelabel#</jobname>
      <join>&LOGDIR;/python_#tilelabel#&LOGEXT;</join>
      <command>&LOAD_MODULES_RUN_TASK_FP; "run_graphics" "&JOBSdir;/JREGIONAL_RUN_GRAPHICS"</command>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>GRAPHICS_TYPE</name><value>enspanel</value></envar>
      <envar><name>TILES</name><value>#tileset#</value></envar>
      <envar><name>TILELABEL</name><value>#tilelabel#</value></envar>
      <envar><name>ALL_LEADS</name><value>FALSE</value></envar>
      <envar><name>ENSCTRL_COMOUT_BASEDIR</name><value>&ENSCTRL_COMOUT_BASEDIR;</value></envar>

      <dependency>
        <and>
          <datadep age="00:00:00:05"><cyclestr>&ENSCTRL_COMOUT_DIR;/RRFS_CONUS.t@Hz.bgdawpf000.tm00.grib2</cyclestr></datadep>
          {%- for m in range(1, 10) %}
          <taskdep task="&TN_RUN_PRDGEN;_mem{{ "%04d" % m }}_f000"/>
          {%- endfor %}
        </and>
      </dependency>
    </task>
  </metatask>
{%- endif %}
{%- endif %}
<!--
************************************************************************
************************************************************************
-->

{%- if do_ensemble and do_ensfcst and do_enspost %}
<!--
************************************************************************
************************************************************************
-->
  <metatask name="enspost">
    <var name="fhr"> {% for h in range(0, postproc_len_hrs+1) %}{{ " %03d" % h  }}{% endfor %} </var>

    <task name="enspost_#fhr#" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_post }}">

      &RSRV_DEFAULT;
      &WALL_LIMIT_POST;

      <walltime>{{ wtime_run_enspost }}</walltime>
      <nodes>{{ nnodes_run_enspost }}:ppn={{ ppn_run_enspost }}</nodes>
      <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
      <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

      <jobname>&TAG;enspost_<cyclestr>@H</cyclestr>_#fhr#</jobname>
      <join>&LOGDIR;/enspost_f#fhr#<cyclestr>_@Y@m@d@H</cyclestr>&LOGEXT;</join>
      <command>&LOAD_MODULES_RUN_TASK_FP; "run_enspost" "&JOBSdir;/JREGIONAL_RUN_ENSPOST"</command>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>USHdir</name><value>&USHdir;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
      <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>ENSCTRL_COMOUT_BASEDIR</name><value>&ENSCTRL_COMOUT_BASEDIR;</value></envar>

      <dependency>
        <and>
          <datadep age="00:00:00:05"><cyclestr>&ENSCTRL_COMOUT_DIR;/RRFS_CONUS.t@Hz.bgsfcf#fhr#.tm00.grib2</cyclestr></datadep>
          {%- for m in range(1, num_ens_members_fcst+1) %}
          <taskdep task="&TN_RUN_PRDGEN;_mem{{ "%04d" % m }}_f#fhr#"/>
          {%- endfor %}
        </and>
      </dependency>
    </task>
  </metatask>

<!--
************************************************************************
************************************************************************
-->
{% if machine in ["JET", "HERA"] %}
  <task name="python_enspost_maps" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_post }}">

    &RSRV_GRAPHICS;
    &WALL_LIMIT_GRAPHICS;

    <walltime>{{ wtime_run_enspost }}</walltime>
    <nodes>{{ nnodes_run_graphics }}:ppn={{ ppn_run_graphics }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
  {%- if machine not in ["WCOSS2"] %}
    <native>&SCHED_NATIVE_CMD;</native>
  {%- endif %}

    <jobname>&TAG;python_<cyclestr>@H</cyclestr>_enspost_maps</jobname>
    <join>&LOGDIR;/python_enspost_maps&LOGEXT;</join>
    <command>&LOAD_MODULES_RUN_TASK_FP; "run_graphics" "&JOBSdir;/JREGIONAL_RUN_GRAPHICS"</command>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>USHdir</name><value>&USHdir;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>subcyc</name><value><cyclestr>@M</cyclestr></value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

    <envar><name>GRAPHICS_TYPE</name><value>maps</value></envar>
    <envar><name>TILES</name><value>full</value></envar>
    <envar><name>TILELABEL</name><value>full</value></envar>
    <envar><name>ALL_LEADS</name><value>FALSE</value></envar>
    <envar><name>ENSCTRL_COMOUT_BASEDIR</name><value>&ENSCTRL_COMOUT_BASEDIR;</value></envar>
    <envar><name>ENSPROD</name><value>ensprod</value></envar>
    <envar><name>IMAGES_FN</name><value>rrfs_ensprod.yml</value></envar>

    <dependency>
      <metataskdep metatask='enspost'/>
    </dependency>
  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{%- endif %}
{%- endif %}

</workflow>
