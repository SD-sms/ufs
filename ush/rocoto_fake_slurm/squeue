#!/bin/bash

# Emulates slurm's squeue
if [[ "$1" = "--jobs="* ]]; then
  PIDS="${1:7}"
elif [[ -f .job_database ]]; then
  PIDS=$(cat .job_database | grep submitted | sort -u -k1,1 |  awk '{print $3}')
fi
PIDS="${PIDS//,/' '}"

# Output info the way rocoto calls squeue
FMT="%-40s%-40s%-10s%-20s%-30s%-30s%-30s%-30s%-10s%-30s%-200s\n"
printf "$FMT" JOBID USER CPUS PARTITION SUBMIT_TIME START_TIME END_TIME PRIORITY EXIT_CODE STATE NAME
for pid in ${PIDS}; do
   t_sub=$(date --utc +%Y-%m-%d:%H:%M:%S)
   t_start=$t_sub
   t_end=$t_sub
   name=$pid

   v=$(cat .job_database | grep "pid $pid submitted" | awk '{print $1" "$5}')
   if [ ! -z "$v" ]; then
      read name t_sub <<< "$v"
      v=$(cat .job_database | grep "pid $pid exitcode" | awk '{print $5" "$7" "$9}')
      if [ ! -z "$v" ]; then
         read v t_start t_end <<< "$v"
      fi
   fi

   if [ -z "$v" ]; then
      printf "$FMT" $pid $USER 1 linux $t_sub $t_start $t_end 0.1 0 RUNNING $name
   else
      printf "$FMT" $pid $USER 1 linux $t_sub $t_start $t_end 0.1 $v COMPLETED $name
   fi
done
