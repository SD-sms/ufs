#!/bin/bash

# Emulates slurm's sacct
if [[ "$1" = "--jobs="* ]]; then
  PIDS="${1:7}"
elif [[ -f .job_database ]]; then
  PIDS=$(cat .job_database | grep submitted | sort -u -k1,1 |  awk '{print $3}')
fi
PIDS="${PIDS//,/' '}"

# Output info the way rocoto calls sacct
FMT="%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s\n"
echo "JobID|User|JobName|Partition|Priority|Submit|Start|End|NCPUS|ExitCode|State"
for pid in ${PIDS}; do
   t_sub=$(date --utc +%Y-%m-%d:%H:%M:%S)
   t_start=$t_sub
   t_end=$t_sub
   name=$pid

   v=$(cat .job_database | grep "pid $pid submitted" | awk '{print $1" "$5}')
   if [ ! -z "$v" ]; then
      read name t_sub <<< "$v"
      v=$(cat .job_database | grep "pid $pid exitcode" | awk '{print $5" "$7" "$9}')
      if [ ! -z "$v" ]; then
         read v t_start t_end <<< "$v"
      fi
   fi

   if [ -z "$v" ]; then
      printf "$FMT" $pid ${USER:0:30} ${name:0:30} linux 0.1 $t_sub $t_start $t_end 1  0 RUNNING
   else
      printf "$FMT" $pid ${USRE:0:30} ${name:0:30} linux 0.1 $t_sub $t_start $t_end 1 $v COMPLETED
   fi
done
